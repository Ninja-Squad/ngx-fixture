var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/ComponentTester.html",[0,0.149,1,0.41]],["body/classes/ComponentTester.html",[0,0.137,1,0.627,2,0.39,3,0.39,4,0.243,5,4.208,6,1.397,7,1.045,8,2.176,9,2.176,10,2.176,11,1.678,12,1.018,13,1.678,14,3.133,15,2.176,16,1.678,17,0.682,18,1.036,19,0.835,20,1.35,21,0.748,22,1.048,23,1.22,24,1.189,25,1.123,26,0.18,27,1.189,28,3.416,29,0.858,30,2.672,31,2.32,32,1.678,33,1.176,34,1.073,35,1.097,36,0.312,37,2.176,38,1.022,39,0.079,40,1.164,41,1.397,42,1.187,43,0.969,44,3.269,45,3.016,46,1.678,47,2.176,48,0.877,49,0.858,50,0.667,51,3.016,52,1.397,53,1.397,54,0.694,55,0.747,56,1.481,57,1.397,58,1.349,59,0.076,60,1.288,61,1.319,62,1.319,63,1.319,64,1.414,65,1.459,66,1.024,67,0.597,68,1.499,69,2.176,70,1.397,71,2.672,72,1.397,73,2.176,74,2.672,75,1.397,76,0.486,77,0.486,78,0.486,79,1.397,80,1.397,81,0.39,82,0.747,83,1.397,84,0.608,85,1.036,86,1.073,87,0.843,88,0.747,89,0.747,90,1.397,91,1.284,92,0.747,93,0.608,94,0.747,95,1.397,96,0.747,97,1.397,98,0.597,99,0.747,100,1.397,101,0.747,102,0.48,103,1.35,104,1.078,105,1.397,106,1.678,107,0.747,108,2.176,109,2.176,110,1.678,111,1.397,112,1.397,113,2.176,114,0.73,115,1.397,116,1.397,117,0.608,118,0.835,119,1.397,120,0.312,121,1.078,122,1.078,123,1.564,124,0.39,125,0.867,126,1.397,127,0.71,128,1.397,129,1.397,130,1.397,131,1.397,132,1.397,133,1.397,134,1.397,135,1.397,136,1.397,137,1.397,138,1.397,139,1.397,140,1.397,141,1.397,142,1.397,143,1.397,144,0.035]],["title/classes/TestButton.html",[0,0.149,67,0.528]],["body/classes/TestButton.html",[0,0.24,1,0.743,2,0.864,3,0.864,4,0.536,7,0.864,12,0.917,19,0.957,22,0.957,26,0.398,29,0.957,36,0.69,38,0.69,39,0.078,40,1.147,43,0.69,48,0.69,49,0.69,50,0.536,54,0.713,59,0.062,66,0.848,67,0.848,76,0.69,77,0.69,78,0.69,81,0.864,102,1.062,114,1.022,118,0.917,120,0.69,124,0.864,144,0.062,145,1.411,146,3.09,147,0.848,148,1.06,149,1.303,150,1.06,151,1.06,152,1.303,153,1.471,154,1.791,155,1.303,156,3.09,157,1.303,158,1.293,159,1.57,160,4.282,161,3.09,162,3.09,163,3.794,164,1.293,165,1.293,166,3.09]],["title/classes/TestElement.html",[0,0.149,23,0.66]],["body/classes/TestElement.html",[0,0.224,1,0.541,2,0.416,3,0.416,4,0.258,7,1.066,12,1.008,17,0.541,18,0.784,19,0.852,21,0.746,22,1.056,23,1.152,24,1.071,25,1.071,26,0.192,27,0.955,29,0.874,33,1.19,34,1.093,35,1.116,36,0.332,38,0.994,39,0.079,40,1.179,42,1.217,43,0.332,48,0.892,49,0.96,50,0.693,54,0.642,55,0.784,56,1.54,58,1.372,59,0.076,60,1.295,61,1.344,62,1.344,63,1.344,64,1.434,65,1.496,66,1.028,67,0.621,68,1.514,76,0.697,77,0.697,78,0.697,81,0.638,82,0.784,84,0.638,85,1.071,86,1.093,87,0.871,88,0.784,89,0.784,91,1.416,92,0.784,93,0.638,94,0.784,96,0.784,98,0.621,99,0.784,101,0.777,102,0.511,103,1.417,104,1.147,107,0.784,114,0.933,117,0.638,118,0.826,120,0.332,121,1.761,122,1.761,123,1.547,124,0.416,127,0.756,144,0.037,145,1.463,147,0.51,148,0.638,149,1.22,150,0.638,151,0.638,155,0.511,157,0.955,167,1.147,168,1.163,169,0.955,170,0.784,171,0.955,172,1.487,173,1.487,174,0.955,175,1.487,176,1.487,177,0.955,178,1.066,179,1.487,180,1.071,181,0.955,182,1.487,183,1.487,184,1.487,185,1.487,186,1.487,187,1.487,188,1.487,189,2.284,190,1.487,191,1.487,192,1.761,193,2.284,194,1.487,195,1.487,196,1.487,197,1.487,198,1.487,199,1.487,200,1.487,201,1.487,202,1.487,203,1.487,204,1.487,205,1.761,206,1.487,207,1.487,208,1.487,209,1.487,210,1.487,211,1.487,212,1.487,213,1.487,214,1.487]],["title/classes/TestHtmlElement.html",[0,0.149,153,0.812]],["body/classes/TestHtmlElement.html",[0,0.18,1,0.627,2,0.562,3,0.562,4,0.349,7,1.163,12,1.001,17,0.495,18,0.98,19,0.885,21,0.707,22,1.05,23,1.271,24,0.98,25,0.98,26,0.259,27,0.98,29,0.852,33,1.163,34,1.065,35,1.065,36,0.449,38,1.012,39,0.078,40,1.226,42,1.183,43,0.449,48,0.959,49,0.988,50,0.745,54,0.576,55,0.69,56,1.548,58,1.31,59,0.075,60,1.276,61,1.24,62,1.24,63,1.24,64,1.36,65,1.43,66,0.995,67,0.449,68,1.475,76,0.807,77,0.807,78,0.807,81,0.927,82,0.69,84,0.562,85,0.98,86,1.009,87,0.797,88,0.69,89,0.69,91,1.24,92,0.69,93,0.562,94,0.69,96,0.69,98,0.449,99,0.69,101,0.562,107,0.98,114,0.988,117,0.562,118,0.741,120,0.449,124,0.562,144,0.046,145,1.139,147,0.637,148,0.797,149,1.24,150,0.797,151,0.797,152,0.98,153,0.98,154,1.657,155,0.98,157,0.98,158,1.796,164,1.595,165,0.841,167,1.55,168,1.193,169,1.193,170,0.98,171,1.193,174,0.841,177,0.841,178,1.065,180,0.98,181,0.841,205,1.55,215,2.01,216,2.01,217,2.01,218,2.01,219,2.01,220,2.01,221,2.01,222,2.01,223,2.01,224,2.01,225,2.01,226,2.01,227,2.01]],["title/classes/TestInput.html",[0,0.149,86,0.66]],["body/classes/TestInput.html",[0,0.162,1,0.586,2,0.487,3,0.487,4,0.302,7,1.142,12,1.02,17,0.447,18,1.16,19,0.842,21,0.677,22,1.037,23,1.007,24,0.884,25,0.884,26,0.224,27,0.884,29,0.805,33,1.276,34,1.007,35,1.007,36,0.389,38,1.02,39,0.078,40,1.24,42,1.142,43,0.389,48,0.942,49,0.971,50,0.732,54,0.531,55,0.598,56,1.54,58,1.237,59,0.074,60,1.253,61,1.16,62,1.16,63,1.16,64,1.295,65,1.375,66,1.002,67,0.389,68,1.428,76,0.913,77,0.963,78,0.913,81,1.053,82,0.598,84,1.192,85,0.884,86,1.053,87,0.719,88,0.598,89,0.598,91,1.16,92,0.598,93,0.487,94,0.598,96,0.598,98,0.389,99,0.598,101,0.487,102,0.598,107,0.884,114,0.963,117,0.487,118,0.683,120,0.389,123,0.729,124,0.487,127,1.307,144,0.042,145,1.34,147,0.575,148,0.719,149,1.16,150,0.719,151,0.719,152,0.884,153,1.494,154,1.412,155,0.884,157,0.884,158,1.764,159,0.885,164,1.279,165,0.729,168,1.076,169,1.076,170,0.884,171,1.076,174,0.729,177,0.729,178,1.178,180,1.375,181,0.729,228,1.742,229,4.157,230,1.984,231,3.77,232,1.742,233,1.081,234,1.742,235,1.984,236,1.742,237,1.596,238,1.742,239,1.081,240,1.081,241,1.081,242,1.081,243,1.081,244,1.081,245,1.081,246,1.081,247,1.081,248,1.344,249,1.742,250,1.742,251,1.742,252,1.984,253,1.344,254,3.058,255,1.742,256,1.984,257,1.742]],["title/classes/TestSelect.html",[0,0.149,98,0.528]],["body/classes/TestSelect.html",[0,0.148,1,0.55,2,0.429,3,0.429,4,0.266,7,1.077,12,0.984,17,0.406,18,0.803,19,0.803,21,0.649,22,1.025,23,0.953,24,0.803,25,0.803,26,0.527,27,0.803,29,0.762,33,1.077,34,1.273,35,0.953,36,0.343,38,1.012,39,0.078,40,1.243,42,1.23,43,0.343,48,0.939,49,0.965,50,0.801,54,0.492,55,0.527,56,1.551,58,1.356,59,0.073,60,1.23,61,1.323,62,1.088,63,1.088,64,1.235,65,1.323,66,1.012,67,0.343,68,1.484,76,0.882,77,0.957,78,0.882,81,1.004,82,0.527,84,1.103,85,0.803,86,0.885,87,0.653,88,0.527,89,0.527,91,1.383,92,0.527,93,0.429,94,0.527,96,0.527,98,0.633,99,0.527,101,0.429,102,0.527,107,0.803,114,0.939,117,0.429,118,0.633,120,0.343,124,0.429,125,1.451,144,0.038,145,1.406,147,0.522,148,0.653,149,1.088,150,0.653,151,0.653,152,0.803,153,1.458,154,1.325,155,0.803,157,0.803,158,1.712,159,0.779,164,1.185,165,0.642,168,0.978,169,0.978,170,0.803,171,0.978,174,0.642,177,0.642,178,1.144,180,1.323,181,0.642,192,2.631,233,0.952,239,0.952,240,0.952,241,0.952,242,0.952,243,0.952,244,0.952,245,0.952,246,0.952,247,0.952,256,1.183,258,1.534,259,2.338,260,2.338,261,2.338,262,1.534,263,2.338,264,3.737,265,1.534,266,2.338,267,1.534,268,4.094,269,3.168,270,3.168,271,3.168,272,2.338,273,1.534,274,2.338,275,1.534,276,1.534,277,2.338,278,1.534,279,1.534,280,1.534,281,1.534,282,1.534,283,1.534,284,1.534,285,1.534,286,2.338,287,1.534,288,1.534,289,2.338,290,1.534,291,1.534,292,2.338,293,1.534,294,1.803,295,2.338,296,1.534,297,1.534,298,2.338,299,2.338,300,1.534,301,1.534,302,1.534]],["title/classes/TestTextArea.html",[0,0.149,101,0.66]],["body/classes/TestTextArea.html",[0,0.173,1,0.61,2,0.529,3,0.529,4,0.329,7,1.166,12,1.008,17,0.474,18,0.939,19,0.867,21,0.695,22,1.044,23,1.041,24,0.939,25,0.939,26,0.244,27,0.939,29,0.832,33,1.184,34,1.041,35,1.223,36,0.423,38,1.017,39,0.078,40,1.233,42,1.166,43,0.423,48,0.959,49,0.985,50,0.745,54,0.557,55,0.65,56,1.557,58,1.279,59,0.075,60,1.267,61,1.206,62,1.206,63,1.206,64,1.333,65,1.407,66,0.998,67,0.423,68,1.456,76,0.832,77,0.832,78,0.832,81,0.981,82,0.65,84,1.212,85,0.939,86,0.981,87,0.764,88,0.65,89,0.65,91,1.206,92,0.65,93,0.529,94,0.65,96,0.65,98,0.423,99,0.65,101,0.896,102,0.65,107,0.939,114,0.978,117,0.529,118,0.716,120,0.423,123,0.792,124,0.529,127,1.389,144,0.044,145,1.206,147,0.61,148,0.764,149,1.206,150,0.764,151,0.764,152,0.939,153,1.515,154,1.469,155,0.939,157,0.939,158,1.795,159,0.962,164,1.342,165,0.792,168,1.143,169,1.143,170,0.939,171,1.143,174,0.792,177,0.792,178,1.118,180,1.206,181,0.792,230,2.108,233,1.175,235,2.108,237,1.696,239,1.175,240,1.175,241,1.175,242,1.175,243,1.175,244,1.175,245,1.175,246,1.175,247,1.175,248,1.46,252,2.108,253,1.46,303,1.893,304,1.893,305,1.893,306,1.893]],["title/dependencies.html",[307,1.989,308,2.184]],["body/dependencies.html",[39,0.075,59,0.068,120,0.82,144,0.068,308,2.832,309,3.671,310,4.416,311,3.671,312,3.671]],["title/miscellaneous/functions.html",[313,1.534,314,2.184]],["body/miscellaneous/functions.html",[17,0.67,20,2.395,26,0.409,31,2.683,39,0.07,42,0.888,46,3.515,48,0.862,49,0.862,50,0.75,54,0.75,59,0.063,84,1.078,123,1.614,144,0.063,237,2.395,313,2.45,314,2.45,315,3.858,316,3.858,317,3.858,318,3.176,319,3.176,320,3.858,321,3.858,322,3.858,323,3.176,324,3.858,325,3.858,326,3.858,327,4.323,328,3.858,329,3.858,330,3.858,331,4.632,332,3.858,333,4.503,334,3.176,335,4.156,336,3.858,337,3.858,338,3.858,339,3.858,340,3.176,341,2.45,342,3.176,343,3.176]],["title/index.html",[21,0.345,26,0.256,344,1.235]],["body/index.html",[0,0.245,1,0.702,4,0.554,11,1.824,12,0.528,13,2.986,14,1.824,16,1.824,17,0.762,19,0.903,20,1.468,21,0.411,22,0.951,26,0.305,28,2.463,29,0.713,31,1.468,32,2.463,33,0.892,34,1.13,35,0.661,36,0.528,38,0.713,39,0.078,43,0.528,50,0.628,54,0.752,59,0.052,60,0.892,66,0.903,76,0.528,77,0.528,78,0.528,87,0.661,93,0.892,98,0.713,103,1.982,106,1.824,110,1.824,114,0.528,117,0.661,118,0.528,125,2.244,144,0.052,147,0.713,148,0.892,150,0.661,151,1.164,152,1.097,170,1.097,178,0.661,180,0.813,294,1.824,344,1.982,345,4.258,346,4.258,347,3.194,348,3.194,349,3.615,350,2.365,351,3.194,352,3.871,353,3.194,354,2.365,355,3.194,356,2.365,357,2.365,358,2.365,359,2.365,360,2.365,361,2.365,362,2.365,363,2.365,364,2.365,365,2.365,366,2.365,367,1.824,368,3.871,369,3.194,370,3.194,371,4.258,372,4.043,373,3.194,374,3.615,375,3.194,376,3.194,377,3.194,378,3.194,379,3.194,380,4.331,381,3.194,382,2.365,383,2.365,384,2.365,385,2.365,386,2.365,387,2.365,388,2.365,389,2.365,390,2.365,391,3.194,392,3.194,393,3.194,394,2.365,395,2.789,396,2.365,397,2.365,398,2.365,399,3.615,400,3.615,401,3.194,402,2.365,403,2.365,404,2.365,405,2.365,406,3.194,407,3.615,408,3.194,409,2.365,410,2.365,411,2.365,412,2.365,413,2.365,414,2.365,415,2.365,416,3.194,417,3.194,418,2.365,419,2.365,420,2.365,421,3.194,422,3.194,423,2.365,424,3.194,425,3.194,426,2.365,427,2.365,428,2.365,429,3.194,430,2.365,431,2.365,432,2.365,433,2.365,434,2.365,435,1.824,436,2.365,437,2.365,438,3.194,439,2.365,440,3.194,441,2.365,442,2.365,443,2.365,444,2.365,445,2.365,446,2.365]],["title/license.html",[21,0.345,344,1.235,447,1.534]],["body/license.html",[4,0.56,17,0.676,39,0.063,59,0.063,144,0.063,147,0.72,178,0.901,341,3.226,367,2.486,395,2.486,435,2.486,447,2.486,448,3.224,449,4.183,450,3.224,451,3.224,452,3.224,453,3.224,454,3.893,455,3.224,456,3.224,457,3.224,458,3.224,459,3.893,460,3.224,461,4.344,462,4.643,463,3.224,464,3.893,465,3.224,466,4.183,467,3.893,468,3.224,469,3.224,470,3.224,471,3.224,472,3.224,473,3.224,474,3.224,475,3.224,476,3.224,477,3.224,478,3.224,479,3.224,480,3.893,481,3.893,482,3.224,483,3.224,484,3.893,485,3.224,486,3.224,487,3.224,488,3.224,489,3.224,490,3.224,491,3.224,492,3.224,493,3.224,494,3.224,495,3.224,496,3.224,497,3.224,498,3.224,499,3.224,500,3.224,501,3.224,502,3.224,503,3.224,504,3.224,505,3.224,506,3.224]],["title/modules.html",[507,2.461]],["body/modules.html",[39,0.069,59,0.069,144,0.069,507,2.88]],["title/overview.html",[508,2.461]],["body/overview.html",[0,0.235,39,0.069,59,0.069,144,0.069,508,2.87,509,3.722]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":294,"title":{},"body":{"classes/TestSelect.html":{},"index.html":{}}}],["12",{"_index":377,"title":{},"body":{"index.html":{}}}],["2018",{"_index":451,"title":{},"body":{"license.html":{}}}],["6.0.0",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":509,"title":{},"body":{"overview.html":{}}}],["abov",{"_index":395,"title":{},"body":{"index.html":{},"license.html":{}}}],["access",{"_index":16,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["accessor",{"_index":102,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["action",{"_index":500,"title":{},"body":{"license.html":{}}}],["activatedrout",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activatedroutesnapshot",{"_index":343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["actual",{"_index":64,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["add",{"_index":426,"title":{},"body":{"index.html":{}}}],["addit",{"_index":148,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["allow",{"_index":20,"title":{},"body":{"classes/ComponentTester.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["alreadi",{"_index":362,"title":{},"body":{"index.html":{}}}],["alway",{"_index":406,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":474,"title":{},"body":{"license.html":{}}}],["angular",{"_index":13,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["angular/cor",{"_index":120,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"dependencies.html":{}}}],["angular/core/test",{"_index":119,"title":{},"body":{"classes/ComponentTester.html":{}}}],["angular/rout",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":11,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["arg",{"_index":51,"title":{},"body":{"classes/ComponentTester.html":{}}}],["aris",{"_index":504,"title":{},"body":{"license.html":{}}}],["around",{"_index":401,"title":{},"body":{"index.html":{}}}],["array",{"_index":91,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["array).map(opt",{"_index":299,"title":{},"body":{"classes/TestSelect.html":{}}}],["array.prototype.slice.call(this.nativeelement.classlist",{"_index":207,"title":{},"body":{"classes/TestElement.html":{}}}],["array.prototype.slice.call(this.nativeelement.opt",{"_index":298,"title":{},"body":{"classes/TestSelect.html":{}}}],["associ",{"_index":463,"title":{},"body":{"license.html":{}}}],["attr",{"_index":169,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["attr(nam",{"_index":174,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["attribut",{"_index":149,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["author",{"_index":493,"title":{},"body":{"license.html":{}}}],["automat",{"_index":402,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":398,"title":{},"body":{"index.html":{}}}],["base",{"_index":350,"title":{},"body":{"index.html":{}}}],["benefit",{"_index":437,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":74,"title":{},"body":{"classes/ComponentTester.html":{}}}],["button",{"_index":29,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["button(selector",{"_index":55,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["button.t",{"_index":146,"title":{},"body":{"classes/TestButton.html":{}}}],["button.ts:16",{"_index":162,"title":{},"body":{"classes/TestButton.html":{}}}],["button.ts:8",{"_index":156,"title":{},"body":{"classes/TestButton.html":{}}}],["c",{"_index":450,"title":{},"body":{"license.html":{}}}],["care",{"_index":364,"title":{},"body":{"index.html":{}}}],["case",{"_index":405,"title":{},"body":{"index.html":{}}}],["chang",{"_index":77,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["charg",{"_index":458,"title":{},"body":{"license.html":{}}}],["check",{"_index":229,"title":{},"body":{"classes/TestInput.html":{}}}],["checknochang",{"_index":79,"title":{},"body":{"classes/ComponentTester.html":{}}}],["citi",{"_index":371,"title":{},"body":{"index.html":{}}}],["claim",{"_index":496,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{},"overview.html":{}}}],["cleaner",{"_index":348,"title":{},"body":{"index.html":{}}}],["click",{"_index":154,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["code",{"_index":336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compon",{"_index":43,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["component.spec.t",{"_index":427,"title":{},"body":{"index.html":{}}}],["componentfixtur",{"_index":14,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["componentinst",{"_index":110,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["componenttest",{"_index":1,"title":{"classes/ComponentTester.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["componenttester(fixtur",{"_index":128,"title":{},"body":{"classes/ComponentTester.html":{}}}],["componenttyp",{"_index":72,"title":{},"body":{"classes/ComponentTester.html":{}}}],["condit",{"_index":479,"title":{},"body":{"license.html":{}}}],["connect",{"_index":506,"title":{},"body":{"license.html":{}}}],["const",{"_index":125,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestSelect.html":{},"index.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["constructor(arg",{"_index":37,"title":{},"body":{"classes/ComponentTester.html":{}}}],["constructor(protect",{"_index":197,"title":{},"body":{"classes/TestElement.html":{}}}],["constructor(test",{"_index":155,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["contain",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["content",{"_index":193,"title":{},"body":{"classes/TestElement.html":{}}}],["contract",{"_index":501,"title":{},"body":{"license.html":{}}}],["copi",{"_index":461,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":449,"title":{},"body":{"license.html":{}}}],["countri",{"_index":372,"title":{},"body":{"index.html":{}}}],["countryselect",{"_index":374,"title":{},"body":{"index.html":{}}}],["countryselect.dispatchevent(new",{"_index":378,"title":{},"body":{"index.html":{}}}],["countryselect.selectedindex",{"_index":376,"title":{},"body":{"index.html":{}}}],["creat",{"_index":31,"title":{},"body":{"classes/ComponentTester.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["create(componenttyp",{"_index":69,"title":{},"body":{"classes/ComponentTester.html":{}}}],["css",{"_index":65,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["damag",{"_index":497,"title":{},"body":{"license.html":{}}}],["deal",{"_index":464,"title":{},"body":{"license.html":{}}}],["debug",{"_index":117,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["debugel",{"_index":114,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["defin",{"_index":40,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["deleg",{"_index":45,"title":{},"body":{"classes/ComponentTester.html":{}}}],["depend",{"_index":308,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descript",{"_index":7,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["detail",{"_index":436,"title":{},"body":{"index.html":{}}}],["detect",{"_index":78,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["detectchang",{"_index":32,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["detectchanges(checknochang",{"_index":73,"title":{},"body":{"classes/ComponentTester.html":{}}}],["dev",{"_index":424,"title":{},"body":{"index.html":{}}}],["directli",{"_index":47,"title":{},"body":{"classes/ComponentTester.html":{}}}],["disabl",{"_index":160,"title":{},"body":{"classes/TestButton.html":{}}}],["dispatch",{"_index":180,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["dispatchev",{"_index":170,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["dispatchevent(ev",{"_index":177,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["dispatcheventoftyp",{"_index":171,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["dispatcheventoftype(typ",{"_index":181,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["display",{"_index":369,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":472,"title":{},"body":{"license.html":{}}}],["document",{"_index":435,"title":{},"body":{"index.html":{},"license.html":{}}}],["doesn't",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dom",{"_index":107,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["don't",{"_index":340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dri",{"_index":393,"title":{},"body":{"index.html":{}}}],["e",{"_index":200,"title":{},"body":{"classes/TestElement.html":{}}}],["each",{"_index":439,"title":{},"body":{"index.html":{}}}],["easier",{"_index":403,"title":{},"body":{"index.html":{}}}],["element",{"_index":22,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["element(selector",{"_index":82,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["element.t",{"_index":167,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{}}}],["element.ts:104",{"_index":186,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:114",{"_index":187,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:123",{"_index":176,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:14",{"_index":172,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:16",{"_index":217,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["element.ts:20",{"_index":173,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:24",{"_index":188,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:31",{"_index":191,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:38",{"_index":182,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:46",{"_index":179,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:54",{"_index":195,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:62",{"_index":175,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:74",{"_index":183,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:8",{"_index":215,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["element.ts:86",{"_index":184,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:95",{"_index":185,"title":{},"body":{"classes/TestElement.html":{}}}],["elements(selector",{"_index":89,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["empti",{"_index":93,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["entri",{"_index":9,"title":{},"body":{"classes/ComponentTester.html":{}}}],["error",{"_index":62,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["etc",{"_index":407,"title":{},"body":{"index.html":{}}}],["event",{"_index":178,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{},"license.html":{}}}],["event('chang",{"_index":379,"title":{},"body":{"index.html":{}}}],["event(typ",{"_index":204,"title":{},"body":{"classes/TestElement.html":{}}}],["exampl",{"_index":25,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["exist",{"_index":412,"title":{},"body":{"index.html":{}}}],["expect(city).tobetruthi",{"_index":383,"title":{},"body":{"index.html":{}}}],["expect(city.options.length).tobe(3",{"_index":384,"title":{},"body":{"index.html":{}}}],["expect(city.options[0].label).tob",{"_index":386,"title":{},"body":{"index.html":{}}}],["expect(city.options[0].value).tob",{"_index":385,"title":{},"body":{"index.html":{}}}],["expect(city.options[1].label).tobe('pari",{"_index":388,"title":{},"body":{"index.html":{}}}],["expect(city.options[1].value).tobe('pari",{"_index":387,"title":{},"body":{"index.html":{}}}],["expect(city.options[2].label).tobe('lyon",{"_index":390,"title":{},"body":{"index.html":{}}}],["expect(city.options[2].value).tobe('lyon",{"_index":389,"title":{},"body":{"index.html":{}}}],["expect(fixture.nativeelement.queryselector('#city')).tobefalsi",{"_index":394,"title":{},"body":{"index.html":{}}}],["expect(tester.city).tobefalsi",{"_index":420,"title":{},"body":{"index.html":{}}}],["expect(tester.city.optionlabels).toequ",{"_index":418,"title":{},"body":{"index.html":{}}}],["expect(tester.city.optionvalues).toequ",{"_index":415,"title":{},"body":{"index.html":{}}}],["export",{"_index":124,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["expos",{"_index":430,"title":{},"body":{"index.html":{}}}],["express",{"_index":486,"title":{},"body":{"license.html":{}}}],["extend",{"_index":152,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["fake",{"_index":321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fakerout",{"_index":315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fakeroute(opt",{"_index":319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fakesnapshot",{"_index":317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fakesnapshot(opt",{"_index":342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fals",{"_index":257,"title":{},"body":{"classes/TestInput.html":{}}}],["feedback",{"_index":443,"title":{},"body":{"index.html":{}}}],["few",{"_index":360,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{},"license.html":{}}}],["fillwith",{"_index":230,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["fillwith(valu",{"_index":235,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["first",{"_index":58,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["fit",{"_index":489,"title":{},"body":{"license.html":{}}}],["fixtur",{"_index":28,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["fixture.detectchang",{"_index":381,"title":{},"body":{"index.html":{}}}],["fixture.nativeelement.queryselector('#c",{"_index":382,"title":{},"body":{"index.html":{}}}],["fixture.nativeelement.queryselector('#countri",{"_index":375,"title":{},"body":{"index.html":{}}}],["flag",{"_index":163,"title":{},"body":{"classes/TestButton.html":{}}}],["follow",{"_index":367,"title":{},"body":{"index.html":{},"license.html":{}}}],["found",{"_index":85,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["franc",{"_index":373,"title":{},"body":{"index.html":{}}}],["free",{"_index":457,"title":{},"body":{"license.html":{}}}],["french",{"_index":370,"title":{},"body":{"index.html":{}}}],["function",{"_index":314,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnish",{"_index":477,"title":{},"body":{"license.html":{}}}],["get",{"_index":21,"title":{"index.html":{},"license.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["getcheck",{"_index":250,"title":{},"body":{"classes/TestInput.html":{}}}],["getclass",{"_index":194,"title":{},"body":{"classes/TestElement.html":{}}}],["getcomponentinst",{"_index":111,"title":{},"body":{"classes/ComponentTester.html":{}}}],["getdebugel",{"_index":115,"title":{},"body":{"classes/ComponentTester.html":{}}}],["getdis",{"_index":161,"title":{},"body":{"classes/TestButton.html":{}}}],["getnativeel",{"_index":104,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{}}}],["getoptionlabel",{"_index":287,"title":{},"body":{"classes/TestSelect.html":{}}}],["getoptionvalu",{"_index":284,"title":{},"body":{"classes/TestSelect.html":{}}}],["getselectedindex",{"_index":275,"title":{},"body":{"classes/TestSelect.html":{}}}],["getselectedlabel",{"_index":281,"title":{},"body":{"classes/TestSelect.html":{}}}],["getselectedvalu",{"_index":278,"title":{},"body":{"classes/TestSelect.html":{}}}],["getsiz",{"_index":290,"title":{},"body":{"classes/TestSelect.html":{}}}],["getter",{"_index":431,"title":{},"body":{"index.html":{}}}],["gettextcont",{"_index":190,"title":{},"body":{"classes/TestElement.html":{}}}],["getvalu",{"_index":248,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["give",{"_index":15,"title":{},"body":{"classes/ComponentTester.html":{}}}],["given",{"_index":42,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["goe",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["grant",{"_index":456,"title":{},"body":{"license.html":{}}}],["help",{"_index":150,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["herebi",{"_index":455,"title":{},"body":{"license.html":{}}}],["hide",{"_index":391,"title":{},"body":{"index.html":{}}}],["holder",{"_index":494,"title":{},"body":{"license.html":{}}}],["host",{"_index":108,"title":{},"body":{"classes/ComponentTester.html":{}}}],["html",{"_index":164,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["htmlelement",{"_index":109,"title":{},"body":{"classes/ComponentTester.html":{}}}],["impli",{"_index":487,"title":{},"body":{"license.html":{}}}],["import",{"_index":118,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["includ",{"_index":466,"title":{},"body":{"license.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["inherit",{"_index":158,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["input",{"_index":33,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["input(selector",{"_index":94,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["input.t",{"_index":228,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:17",{"_index":236,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:25",{"_index":249,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:32",{"_index":251,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:39",{"_index":234,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:47",{"_index":238,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:8",{"_index":232,"title":{},"body":{"classes/TestInput.html":{}}}],["instal",{"_index":421,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":113,"title":{},"body":{"classes/ComponentTester.html":{}}}],["instanceof",{"_index":130,"title":{},"body":{"classes/ComponentTester.html":{}}}],["instead",{"_index":271,"title":{},"body":{"classes/TestSelect.html":{}}}],["isn't",{"_index":63,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["issu",{"_index":440,"title":{},"body":{"index.html":{}}}],["it('should",{"_index":368,"title":{},"body":{"index.html":{}}}],["kind",{"_index":485,"title":{},"body":{"license.html":{}}}],["know",{"_index":363,"title":{},"body":{"index.html":{}}}],["label",{"_index":268,"title":{},"body":{"classes/TestSelect.html":{}}}],["liabil",{"_index":498,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":495,"title":{},"body":{"license.html":{}}}],["librari",{"_index":356,"title":{},"body":{"index.html":{}}}],["licens",{"_index":447,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":467,"title":{},"body":{"license.html":{}}}],["lyon",{"_index":417,"title":{},"body":{"index.html":{}}}],["main",{"_index":8,"title":{},"body":{"classes/ComponentTester.html":{}}}],["make",{"_index":355,"title":{},"body":{"index.html":{}}}],["match",{"_index":59,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["merchant",{"_index":488,"title":{},"body":{"license.html":{}}}],["merg",{"_index":470,"title":{},"body":{"license.html":{}}}],["method",{"_index":19,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["minut",{"_index":361,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":313,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":448,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":469,"title":{},"body":{"license.html":{}}}],["modul",{"_index":507,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mycomponenttest",{"_index":408,"title":{},"body":{"index.html":{}}}],["name",{"_index":49,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["nativ",{"_index":106,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["nativeel",{"_index":103,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"index.html":{}}}],["need",{"_index":380,"title":{},"body":{"index.html":{}}}],["new",{"_index":127,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["ngx",{"_index":345,"title":{},"body":{"index.html":{}}}],["ninja",{"_index":452,"title":{},"body":{"license.html":{}}}],["noninfring",{"_index":492,"title":{},"body":{"license.html":{}}}],["noth",{"_index":269,"title":{},"body":{"classes/TestSelect.html":{}}}],["notic",{"_index":480,"title":{},"body":{"license.html":{}}}],["npm",{"_index":422,"title":{},"body":{"index.html":{}}}],["null",{"_index":68,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["number",{"_index":264,"title":{},"body":{"classes/TestSelect.html":{}}}],["object",{"_index":352,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":460,"title":{},"body":{"license.html":{}}}],["on",{"_index":433,"title":{},"body":{"index.html":{}}}],["option",{"_index":50,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["option.label",{"_index":301,"title":{},"body":{"classes/TestSelect.html":{}}}],["option.valu",{"_index":300,"title":{},"body":{"classes/TestSelect.html":{}}}],["optionlabel",{"_index":286,"title":{},"body":{"classes/TestSelect.html":{}}}],["optionvalu",{"_index":283,"title":{},"body":{"classes/TestSelect.html":{}}}],["otherwis",{"_index":503,"title":{},"body":{"license.html":{}}}],["out",{"_index":505,"title":{},"body":{"license.html":{}}}],["overview",{"_index":508,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":307,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":351,"title":{},"body":{"index.html":{}}}],["param",{"_index":123,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestInput.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["paramet",{"_index":48,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parent",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pari",{"_index":416,"title":{},"body":{"index.html":{}}}],["partial",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["particular",{"_index":490,"title":{},"body":{"license.html":{}}}],["pass",{"_index":46,"title":{},"body":{"classes/ComponentTester.html":{},"miscellaneous/functions.html":{}}}],["pattern",{"_index":353,"title":{},"body":{"index.html":{}}}],["peer",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["permiss",{"_index":454,"title":{},"body":{"license.html":{}}}],["permit",{"_index":476,"title":{},"body":{"license.html":{}}}],["person",{"_index":459,"title":{},"body":{"license.html":{}}}],["pleas",{"_index":442,"title":{},"body":{"index.html":{}}}],["point",{"_index":10,"title":{},"body":{"classes/ComponentTester.html":{}}}],["portion",{"_index":483,"title":{},"body":{"license.html":{}}}],["prefer",{"_index":432,"title":{},"body":{"index.html":{}}}],["previous",{"_index":392,"title":{},"body":{"index.html":{}}}],["privat",{"_index":196,"title":{},"body":{"classes/TestElement.html":{}}}],["properti",{"_index":18,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["provid",{"_index":147,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":168,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["publish",{"_index":471,"title":{},"body":{"license.html":{}}}],["pull",{"_index":445,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":491,"title":{},"body":{"license.html":{}}}],["querier",{"_index":122,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{}}}],["queryparam",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queryparammap",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["question",{"_index":441,"title":{},"body":{"index.html":{}}}],["read",{"_index":404,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":27,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["recommend",{"_index":397,"title":{},"body":{"index.html":{}}}],["repetit",{"_index":399,"title":{},"body":{"index.html":{}}}],["request",{"_index":446,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":465,"title":{},"body":{"license.html":{}}}],["result",{"_index":144,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":66,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["right",{"_index":468,"title":{},"body":{"license.html":{}}}],["rout",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route'",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route.parent.snapshot",{"_index":338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route.snapshot.par",{"_index":339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxj",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["save",{"_index":423,"title":{},"body":{"index.html":{}}}],["see",{"_index":434,"title":{},"body":{"index.html":{}}}],["select",{"_index":34,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["select(selector",{"_index":96,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["select.t",{"_index":258,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:16",{"_index":265,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:26",{"_index":273,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:38",{"_index":267,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:48",{"_index":276,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:55",{"_index":279,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:65",{"_index":282,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:75",{"_index":285,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:8",{"_index":262,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:82",{"_index":288,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:89",{"_index":291,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectedindex",{"_index":274,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectedlabel",{"_index":280,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectedvalu",{"_index":277,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectindex",{"_index":259,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectindex(index",{"_index":263,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectlabel",{"_index":260,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectlabel(label",{"_index":266,"title":{},"body":{"classes/TestSelect.html":{}}}],["selector",{"_index":60,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["selectvalu",{"_index":261,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectvalue(valu",{"_index":272,"title":{},"body":{"classes/TestSelect.html":{}}}],["sell",{"_index":475,"title":{},"body":{"license.html":{}}}],["set",{"_index":237,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["shall",{"_index":481,"title":{},"body":{"license.html":{}}}],["shown",{"_index":429,"title":{},"body":{"index.html":{}}}],["similar",{"_index":411,"title":{},"body":{"index.html":{}}}],["simpler",{"_index":347,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":357,"title":{},"body":{"index.html":{}}}],["size",{"_index":289,"title":{},"body":{"classes/TestSelect.html":{}}}],["snapshot",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["snapshot'",{"_index":335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["softwar",{"_index":462,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["speculoo",{"_index":346,"title":{},"body":{"index.html":{}}}],["squad",{"_index":453,"title":{},"body":{"license.html":{}}}],["src/.../route.t",{"_index":316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/compon",{"_index":5,"title":{},"body":{"classes/ComponentTester.html":{}}}],["src/lib/route.t",{"_index":318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/test",{"_index":145,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["standard",{"_index":358,"title":{},"body":{"index.html":{}}}],["start",{"_index":344,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["static",{"_index":30,"title":{},"body":{"classes/ComponentTester.html":{}}}],["string",{"_index":56,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["subclass",{"_index":24,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["subject",{"_index":478,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":473,"title":{},"body":{"license.html":{}}}],["submit",{"_index":444,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":482,"title":{},"body":{"license.html":{}}}],["super(mycompon",{"_index":409,"title":{},"body":{"index.html":{}}}],["super(test",{"_index":165,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["t",{"_index":71,"title":{},"body":{"classes/ComponentTester.html":{}}}],["test",{"_index":54,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testb",{"_index":44,"title":{},"body":{"classes/ComponentTester.html":{}}}],["testbed.createcomponent(arg",{"_index":131,"title":{},"body":{"classes/ComponentTester.html":{}}}],["testbed.createcomponent(componenttyp",{"_index":126,"title":{},"body":{"classes/ComponentTester.html":{}}}],["testbutton",{"_index":67,"title":{"classes/TestButton.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testel",{"_index":23,"title":{"classes/TestElement.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testelement:104",{"_index":225,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:114",{"_index":226,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:123",{"_index":219,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:20",{"_index":216,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:38",{"_index":221,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:46",{"_index":220,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:62",{"_index":218,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:74",{"_index":222,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:86",{"_index":223,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:95",{"_index":224,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelementqueri",{"_index":121,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{}}}],["testelementquerier(test",{"_index":199,"title":{},"body":{"classes/TestElement.html":{}}}],["testelementquerier.wrap(this.debugel",{"_index":133,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester",{"_index":157,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["tester.country.selectindex(0",{"_index":419,"title":{},"body":{"index.html":{}}}],["tester.country.selectlabel('fr",{"_index":414,"title":{},"body":{"index.html":{}}}],["tester.element('#som",{"_index":88,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["tester.elements('input",{"_index":92,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["tester.t",{"_index":6,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:104",{"_index":97,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:114",{"_index":100,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:123",{"_index":57,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:130",{"_index":75,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:20",{"_index":53,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:25",{"_index":52,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:30",{"_index":70,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:33",{"_index":41,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:48",{"_index":105,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:55",{"_index":112,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:62",{"_index":116,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:74",{"_index":83,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:86",{"_index":90,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:95",{"_index":95,"title":{},"body":{"classes/ComponentTester.html":{}}}],["testhtmlel",{"_index":153,"title":{"classes/TestHtmlElement.html":{}},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:104",{"_index":246,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:114",{"_index":247,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:123",{"_index":240,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:16",{"_index":159,"title":{},"body":{"classes/TestButton.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:20",{"_index":233,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:38",{"_index":242,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:46",{"_index":241,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:62",{"_index":239,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:74",{"_index":243,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:86",{"_index":244,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:95",{"_index":245,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testinput",{"_index":86,"title":{"classes/TestInput.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testselect",{"_index":98,"title":{"classes/TestSelect.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["testtextarea",{"_index":101,"title":{"classes/TestTextArea.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testxxx",{"_index":438,"title":{},"body":{"index.html":{}}}],["text",{"_index":192,"title":{},"body":{"classes/TestElement.html":{},"classes/TestSelect.html":{}}}],["textarea",{"_index":35,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["textarea(selector",{"_index":99,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["textarea.t",{"_index":303,"title":{},"body":{"classes/TestTextArea.html":{}}}],["textarea.ts:17",{"_index":305,"title":{},"body":{"classes/TestTextArea.html":{}}}],["textarea.ts:25",{"_index":306,"title":{},"body":{"classes/TestTextArea.html":{}}}],["textarea.ts:8",{"_index":304,"title":{},"body":{"classes/TestTextArea.html":{}}}],["textcont",{"_index":189,"title":{},"body":{"classes/TestElement.html":{}}}],["this.debugelement.nativeel",{"_index":201,"title":{},"body":{"classes/TestElement.html":{}}}],["this.dispatcheventoftype('chang",{"_index":256,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{}}}],["this.dispatcheventoftype('input",{"_index":253,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["this.fixtur",{"_index":129,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.fixture.componentinst",{"_index":135,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.fixture.debugel",{"_index":136,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.fixture.detectchanges(checknochang",{"_index":143,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.fixture.nativeel",{"_index":134,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.nativeelement.check",{"_index":254,"title":{},"body":{"classes/TestInput.html":{}}}],["this.nativeelement.click",{"_index":227,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["this.nativeelement.dis",{"_index":166,"title":{},"body":{"classes/TestButton.html":{}}}],["this.nativeelement.dispatchevent(ev",{"_index":206,"title":{},"body":{"classes/TestElement.html":{}}}],["this.nativeelement.dispatchevent(new",{"_index":203,"title":{},"body":{"classes/TestElement.html":{}}}],["this.nativeelement.getattribute(nam",{"_index":208,"title":{},"body":{"classes/TestElement.html":{}}}],["this.nativeelement.options.length",{"_index":302,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.nativeelement.selectedindex",{"_index":292,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.nativeelement.textcont",{"_index":202,"title":{},"body":{"classes/TestElement.html":{}}}],["this.nativeelement.valu",{"_index":252,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["this.optionlabels.indexof(label",{"_index":296,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.optionvalues.indexof(valu",{"_index":293,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.queri",{"_index":198,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.button(selector",{"_index":214,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.element(selector",{"_index":209,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.elements(selector",{"_index":210,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.input(selector",{"_index":211,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.select(selector",{"_index":212,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.textarea(selector",{"_index":213,"title":{},"body":{"classes/TestElement.html":{}}}],["this.select('#c",{"_index":413,"title":{},"body":{"index.html":{}}}],["this.select('#countri",{"_index":410,"title":{},"body":{"index.html":{}}}],["this.selectedindex",{"_index":297,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.selectindex(index",{"_index":295,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.testel",{"_index":132,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.button(selector",{"_index":142,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.element(selector",{"_index":137,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.elements(selector",{"_index":138,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.input(selector",{"_index":139,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.select(selector",{"_index":140,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.textarea(selector",{"_index":141,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.tester.detectchang",{"_index":205,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{}}}],["throw",{"_index":61,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["thu",{"_index":87,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["todo",{"_index":270,"title":{},"body":{"classes/TestSelect.html":{}}}],["tort",{"_index":502,"title":{},"body":{"license.html":{}}}],["trigger",{"_index":76,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["true",{"_index":255,"title":{},"body":{"classes/TestInput.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["typic",{"_index":428,"title":{},"body":{"index.html":{}}}],["uncheck",{"_index":231,"title":{},"body":{"classes/TestInput.html":{}}}],["undefin",{"_index":320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["under",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":359,"title":{},"body":{"index.html":{}}}],["unit",{"_index":349,"title":{},"body":{"index.html":{}}}],["us",{"_index":17,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["util",{"_index":354,"title":{},"body":{"index.html":{}}}],["valu",{"_index":84,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["void",{"_index":81,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["warranti",{"_index":484,"title":{},"body":{"license.html":{}}}],["way",{"_index":396,"title":{},"body":{"index.html":{}}}],["whether",{"_index":499,"title":{},"body":{"license.html":{}}}],["without",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["wrap",{"_index":12,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["wrapper",{"_index":400,"title":{},"body":{"index.html":{}}}],["write",{"_index":151,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["written",{"_index":366,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":425,"title":{},"body":{"index.html":{}}}],["ye",{"_index":80,"title":{},"body":{"classes/ComponentTester.html":{}}}],["you'v",{"_index":365,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ComponentTester.html":{"url":"classes/ComponentTester.html","title":"class - ComponentTester","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComponentTester\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/component-tester.ts\n        \n\n            \n                Description\n            \n            \n                The main entry point of the API. It wraps an Angular ComponentFixture, and gives access to its\nmost used properties and methods. It also allows getting elements wrapped in TestElement (and its subclasses)\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                fixture\n                            \n                            \n                                    Readonly\n                                testElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                    Static\n                                create\n                            \n                            \n                                detectChanges\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(arg: Type | ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in src/lib/component-tester.ts:33\n                            \n                        \n\n                \n                    \n                            Creates a ComponentFixture for the given component type using the TestBed, and creates a ComponentTester\nwrapping (and delegating) to this fixture. If a fixture is passed, then delegates to this fixture directly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        arg\n                                                  \n                                                        \n                                                                    Type | ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                the type of the component to wrap, or a component fixture to wrap\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fixture\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fixture:     ComponentFixture\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/component-tester.ts:25\n                            \n                        \n\n                \n                    \n                        The component fixture of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            testElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        testElement:     TestElement\n\n                    \n                \n                    \n                        \n                            Type :     TestElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/component-tester.ts:20\n                            \n                        \n\n                \n                    \n                        The test element of the component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        create(componentType: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:30\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Creates a component fixture of the given type with the TestBed and wraps it into a ComponentTester\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentType\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentTester\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detectChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetectChanges(checkNoChanges?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:130\n                            \n                        \n\n\n                \n                    \n                            Triggers a change detection using the wrapped fixture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        checkNoChanges\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeElement\n                    \n                \n\n                \n                    \n                        getnativeElement()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/component-tester.ts:48\n                                \n                            \n                    \n                        \n                                The native DOM host element of the component\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        componentInstance\n                    \n                \n\n                \n                    \n                        getcomponentInstance()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/component-tester.ts:55\n                                \n                            \n                    \n                        \n                                Gets the instance of the tested component from the wrapped fixture\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        debugElement\n                    \n                \n\n                \n                    \n                        getdebugElement()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/component-tester.ts:62\n                                \n                            \n                    \n                        \n                                Gets the debug element from the wrapped fixture\n\n\n                                \n                                    Returns :     DebugElement\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { DebugElement, Type } from '@angular/core';\nimport { TestTextArea } from './test-textarea';\nimport { TestElement } from './test-element';\nimport { TestInput } from './test-input';\nimport { TestSelect } from './test-select';\nimport { TestButton } from './test-button';\nimport { TestElementQuerier } from './test-element-querier';\n\n/**\n * The main entry point of the API. It wraps an Angular ComponentFixture, and gives access to its\n * most used properties and methods. It also allows getting elements wrapped in TestElement (and its subclasses)\n * @param  the type of the component to test\n */\nexport class ComponentTester {\n\n  /**\n   * The test element of the component\n   */\n  readonly testElement: TestElement;\n\n  /**\n   * The component fixture of the component\n   */\n  readonly fixture: ComponentFixture;\n\n  /**\n   * Creates a component fixture of the given type with the TestBed and wraps it into a ComponentTester\n   */\n  static create(componentType: Type) {\n    const fixture = TestBed.createComponent(componentType);\n    return new ComponentTester(fixture);\n  }\n\n  /**\n   * Creates a ComponentFixture for the given component type using the TestBed, and creates a ComponentTester\n   * wrapping (and delegating) to this fixture. If a fixture is passed, then delegates to this fixture directly.\n   * @param arg the type of the component to wrap, or a component fixture to wrap\n   */\n  constructor(arg: Type | ComponentFixture) {\n    this.fixture = (arg instanceof ComponentFixture) ? arg : TestBed.createComponent(arg);\n    this.testElement = TestElementQuerier.wrap(this.debugElement, this);\n  }\n\n  /**\n   * The native DOM host element of the component\n   */\n  get nativeElement(): HTMLElement {\n    return this.fixture.nativeElement;\n  }\n\n  /**\n   * Gets the instance of the tested component from the wrapped fixture\n   */\n  get componentInstance(): T {\n    return this.fixture.componentInstance;\n  }\n\n  /**\n   * Gets the debug element from the wrapped fixture\n   */\n  get debugElement(): DebugElement {\n    return this.fixture.debugElement;\n  }\n\n  /**\n   * Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\n   * of the returned value is the TestElement subclass matching the type of the found element. So, if the\n   * matched element is an input for example, the method will return a TestInput. You can thus use\n   * `tester.element('#some-input') as TestInput`.\n   * @param selector a CSS selector\n   * @returns the wrapped element, or null if no element matches the selector.\n   */\n  element(selector: string): TestElement | null {\n    return this.testElement.element(selector);\n  }\n\n  /**\n   * Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\n   * of the returned elements is the TestElement subclass matching the type of the found element. So, if the\n   * matched elements are inputs for example, the method will return an array of TestInput. You can thus use\n   * `tester.elements('input') as Array`.\n   * @param selector a CSS selector\n   * @returns the array of matched elements, empty if no element was matched\n   */\n  elements(selector: string): Array> {\n    return this.testElement.elements(selector);\n  }\n\n  /**\n   * Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n   * @param selector a CSS selector\n   * @returns the wrapped input, or null if no element was matched\n   */\n  input(selector: string): TestInput | null  {\n    return this.testElement.input(selector);\n  }\n\n  /**\n   * Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n   * @param selector a CSS selector\n   * @returns the wrapped select, or null if no element was matched\n   */\n  select(selector: string): TestSelect | null  {\n    return this.testElement.select(selector);\n  }\n\n  /**\n   * Gets the first textarea matched by the given selector\n   * @param selector a CSS selector\n   * @returns the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n   * @throws {Error} if the matched element isn't actually a textarea\n   */\n  textarea(selector: string): TestTextArea | null {\n    return this.testElement.textarea(selector);\n  }\n\n  /**\n   * Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n   * @param selector a CSS selector\n   * @returns the wrapped button, or null if no element was matched\n   */\n  button(selector: string): TestButton | null {\n    return this.testElement.button(selector);\n  }\n\n  /**\n   * Triggers a change detection using the wrapped fixture\n   */\n  detectChanges(checkNoChanges?: boolean) {\n    this.fixture.detectChanges(checkNoChanges);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestButton.html":{"url":"classes/TestButton.html","title":"class - TestButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-button.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped button element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestHtmlElement\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-button.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-button.ts:16\n                                \n                            \n                    \n                        \n                                the disabled flag of the button\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestHtmlElement } from './test-html-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped button element, providing additional methods and attributes helping with writing tests\n */\nexport class TestButton extends TestHtmlElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * the disabled flag of the button\n   */\n  get disabled() {\n    return this.nativeElement.disabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestElement.html":{"url":"classes/TestElement.html","title":"class - TestElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-element.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM element, providing additional methods and attributes helping with writing tests\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-element.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/test-element.ts:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeElement\n                    \n                \n\n                \n                    \n                        getnativeElement()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-element.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        textContent\n                    \n                \n\n                \n                    \n                        gettextContent()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-element.ts:31\n                                \n                            \n                    \n                        \n                                the text content of this element\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        classes\n                    \n                \n\n                \n                    \n                        getclasses()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-element.ts:54\n                                \n                            \n                    \n                        \n                                Gets the CSS classes of the wrapped element, as an array\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestButton } from './test-button';\nimport { TestSelect } from './test-select';\nimport { TestTextArea } from './test-textarea';\nimport { TestInput } from './test-input';\nimport { TestElementQuerier } from './test-element-querier';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM element, providing additional methods and attributes helping with writing tests\n */\nexport class TestElement {\n\n  private querier: TestElementQuerier;\n\n  constructor(protected tester: ComponentTester,\n              /**\n               * the wrapped debug element\n               */\n              public readonly debugElement: DebugElement) {\n    this.querier = new TestElementQuerier(tester, debugElement);\n  }\n\n  get nativeElement(): E {\n    return this.debugElement.nativeElement;\n  }\n\n  /**\n   * the text content of this element\n   */\n  get textContent() {\n    return this.nativeElement.textContent;\n  }\n\n  /**\n   * dispatches an event of the given type from the wrapped element, then triggers a change detection\n   */\n  dispatchEventOfType(type: string) {\n    this.nativeElement.dispatchEvent(new Event(type));\n    this.tester.detectChanges();\n  }\n\n  /**\n   * dispatches the given event from the wrapped element, then triggers a change detection\n   */\n  dispatchEvent(event: Event) {\n    this.nativeElement.dispatchEvent(event);\n    this.tester.detectChanges();\n  }\n\n  /**\n   * Gets the CSS classes of the wrapped element, as an array\n   */\n  get classes(): Array {\n    return Array.prototype.slice.call(this.nativeElement.classList);\n  }\n\n  /**\n   * Gets the attribute of the wrapped element with the given name\n   * @param name the name of the attribute to get\n   */\n  attr(name: string) {\n    return this.nativeElement.getAttribute(name);\n  }\n\n  /**\n   * Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\n   * of the returned value is the TestElement subclass matching the type of the found element. So, if the\n   * matched element is an input for example, the method will return a TestInput. You can thus use\n   * `tester.element('#some-input') as TestInput`.\n   * @param selector a CSS selector\n   * @returns the wrapped element, or null if no element matches the selector.\n   */\n  element(selector: string): TestElement | null {\n    return this.querier.element(selector);\n  }\n\n  /**\n   * Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\n   * of the returned elements is the TestElement subclass matching the type of the found element. So, if the\n   * matched elements are inputs for example, the method will return an array of TestInput. You can thus use\n   * `tester.elements('input') as Array`.\n   * @param selector a CSS selector\n   * @returns the array of matched elements, empty if no element was matched\n   */\n  elements(selector: string): Array> {\n    return this.querier.elements(selector);\n  }\n\n  /**\n   * Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n   * @param selector a CSS selector\n   * @returns the wrapped input, or null if no element was matched\n   */\n  input(selector: string): TestInput | null {\n    return this.querier.input(selector);\n  }\n\n  /**\n   * Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n   * @param selector a CSS selector\n   * @returns the wrapped select, or null if no element was matched\n   */\n  select(selector: string): TestSelect | null {\n    return this.querier.select(selector);\n  }\n\n  /**\n   * Gets the first textarea matched by the given selector\n   * @param selector a CSS selector\n   * @returns the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n   * @throws {Error} if the matched element isn't actually a textarea\n   */\n  textarea(selector: string): TestTextArea | null {\n    return this.querier.textarea(selector);\n  }\n\n  /**\n   * Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n   * @param selector a CSS selector\n   * @returns the wrapped button, or null if no element was matched\n   */\n  button(selector: string): TestButton | null {\n    return this.querier.button(selector);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestHtmlElement.html":{"url":"classes/TestHtmlElement.html","title":"class - TestHtmlElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestHtmlElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-html-element.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM HTML element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-html-element.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-html-element.ts:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestElement } from './test-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM HTML element, providing additional methods and attributes helping with writing tests\n */\nexport class TestHtmlElement extends TestElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * Clicks on the wrapped element, then triggers a change detection\n   */\n  click() {\n    this.nativeElement.click();\n    this.tester.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestInput.html":{"url":"classes/TestInput.html","title":"class - TestInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-input.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM HTML input element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestHtmlElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                fillWith\n                            \n                            \n                                uncheck\n                            \n                            \n                                click\n                            \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-input.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-input.ts:39\n                            \n                        \n\n\n                \n                    \n                            Checks the wrapped input, then dispatches an event of type change and triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillWith(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-input.ts:17\n                            \n                        \n\n\n                \n                    \n                            Sets the value of the wrapped input, then dispatches an event of type input and triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the new value of the input\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uncheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nuncheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-input.ts:47\n                            \n                        \n\n\n                \n                    \n                            Unchecks the wrapped input, then dispatches an event of type change and triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-input.ts:25\n                                \n                            \n                    \n                        \n                                the value of the wrapped input\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n\n                \n                    \n                        getchecked()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-input.ts:32\n                                \n                            \n                    \n                        \n                                the checked property of the wrapped input\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestHtmlElement } from './test-html-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM HTML input element, providing additional methods and attributes helping with writing tests\n */\nexport class TestInput extends TestHtmlElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * Sets the value of the wrapped input, then dispatches an event of type input and triggers a change detection\n   * @param value the new value of the input\n   */\n  fillWith(value: string) {\n    this.nativeElement.value = value;\n    this.dispatchEventOfType('input');\n  }\n\n  /**\n   * the value of the wrapped input\n   */\n  get value() {\n    return this.nativeElement.value;\n  }\n\n  /**\n   * the checked property of the wrapped input\n   */\n  get checked() {\n    return this.nativeElement.checked;\n  }\n\n  /**\n   * Checks the wrapped input, then dispatches an event of type change and triggers a change detection\n   */\n  check() {\n    this.nativeElement.checked = true;\n    this.dispatchEventOfType('change');\n  }\n\n  /**\n   * Unchecks the wrapped input, then dispatches an event of type change and triggers a change detection\n   */\n  uncheck() {\n    this.nativeElement.checked = false;\n    this.dispatchEventOfType('change');\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestSelect.html":{"url":"classes/TestSelect.html","title":"class - TestSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-select.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM HTML select element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestHtmlElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectIndex\n                            \n                            \n                                selectLabel\n                            \n                            \n                                selectValue\n                            \n                            \n                                click\n                            \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-select.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-select.ts:16\n                            \n                        \n\n\n                \n                    \n                            Selects the option at the given index, then dispatches an event of type change and triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectLabel(label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-select.ts:38\n                            \n                        \n\n\n                \n                    \n                            Selects the first option with the given label (or text), then dispatches an event of type change and triggers a change detection.\nIf there is no option with the given label, then does nothing\nTODO should it throw instead?\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-select.ts:26\n                            \n                        \n\n\n                \n                    \n                            Selects the first option with the given value, then dispatches an event of type change and triggers a change detection.\nIf there is no option with the given value, then does nothing\nTODO should it throw instead?\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIndex\n                    \n                \n\n                \n                    \n                        getselectedIndex()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:48\n                                \n                            \n                    \n                        \n                                the selected index of the wrapped select\n\n\n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedValue\n                    \n                \n\n                \n                    \n                        getselectedValue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:55\n                                \n                            \n                    \n                        \n                                the value of the selected option of the wrapped select, or null if there is no selected option\n\n\n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedLabel\n                    \n                \n\n                \n                    \n                        getselectedLabel()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:65\n                                \n                            \n                    \n                        \n                                the label (or text if no label) of the selected option of the wrapped select, or null if there is no selected option\n\n\n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        optionValues\n                    \n                \n\n                \n                    \n                        getoptionValues()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:75\n                                \n                            \n                    \n                        \n                                the values of the options, as an array\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        optionLabels\n                    \n                \n\n                \n                    \n                        getoptionLabels()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:82\n                                \n                            \n                    \n                        \n                                the labels (or texts if no label) of the options, as an array\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:89\n                                \n                            \n                    \n                        \n                                the number of options in the select\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestHtmlElement } from './test-html-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM HTML select element, providing additional methods and attributes helping with writing tests\n */\nexport class TestSelect extends TestHtmlElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * Selects the option at the given index, then dispatches an event of type change and triggers a change detection\n   */\n  selectIndex(index: number) {\n    this.nativeElement.selectedIndex = index;\n    this.dispatchEventOfType('change');\n  }\n\n  /**\n   * Selects the first option with the given value, then dispatches an event of type change and triggers a change detection.\n   * If there is no option with the given value, then does nothing\n   * TODO should it throw instead?\n   */\n  selectValue(value: string) {\n    const index = this.optionValues.indexOf(value);\n    if (index >= 0) {\n      this.selectIndex(index);\n    }\n  }\n\n  /**\n   * Selects the first option with the given label (or text), then dispatches an event of type change and triggers a change detection.\n   * If there is no option with the given label, then does nothing\n   * TODO should it throw instead?\n   */\n  selectLabel(label: string) {\n    const index = this.optionLabels.indexOf(label);\n    if (index >= 0) {\n      this.selectIndex(index);\n    }\n  }\n\n  /**\n   * the selected index of the wrapped select\n   */\n  get selectedIndex(): number {\n    return this.nativeElement.selectedIndex;\n  }\n\n  /**\n   * the value of the selected option of the wrapped select, or null if there is no selected option\n   */\n  get selectedValue(): string | null {\n    if (this.selectedIndex  {\n    return (Array.prototype.slice.call(this.nativeElement.options) as Array).map(option => option.value);\n  }\n\n  /**\n   * the labels (or texts if no label) of the options, as an array\n   */\n  get optionLabels(): Array {\n    return (Array.prototype.slice.call(this.nativeElement.options) as Array).map(option => option.label);\n  }\n\n  /**\n   * the number of options in the select\n   */\n  get size() {\n    return this.nativeElement.options.length;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestTextArea.html":{"url":"classes/TestTextArea.html","title":"class - TestTextArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestTextArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-textarea.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM HTML textarea element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestHtmlElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fillWith\n                            \n                            \n                                click\n                            \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-textarea.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillWith(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-textarea.ts:17\n                            \n                        \n\n\n                \n                    \n                            Sets the value of the wrapped textarea, then dispatches an event of type input and triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the new value of the textarea\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-textarea.ts:25\n                                \n                            \n                    \n                        \n                                the value of the wrapped textarea\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestHtmlElement } from './test-html-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM HTML textarea element, providing additional methods and attributes helping with writing tests\n */\nexport class TestTextArea extends TestHtmlElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * Sets the value of the wrapped textarea, then dispatches an event of type input and triggers a change detection\n   * @param value the new value of the textarea\n   */\n  fillWith(value: string) {\n    this.nativeElement.value = value;\n    this.dispatchEventOfType('input');\n  }\n\n  /**\n   * the value of the wrapped textarea\n   */\n  get value() {\n    return this.nativeElement.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fakeRoute   (src/.../route.ts)\n                        \n                        \n                            fakeSnapshot   (src/.../route.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/route.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fakeRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \nfakeRoute(options: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a fake partial ActivatedRoute for tests.\nIf you pass params, then the created route's paramMap will contain the same values.\nThe same goes for queryParams and queryParamMap.\nIf you pass a parent route and a snapshot, and the passed snapshot doesn't have a parent, then the snapshot's\nparent will be set to the parent route snapshot. This allows the code under test to use\nroute.parent.snapshot or route.snapshot.parent.\nIf you pass a snapshot with a parent, but don't pass a parent or pass a parent without snapshot, then the route's\nparent snapshot will be set to the given snapshot's parent. This allows the code under test to use\nroute.parent.snapshot or route.snapshot.parent.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fakeSnapshot\n                            \n                            \n                        \n                    \n                \n                \n                    \nfakeSnapshot(options: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a fake partial ActivatedRouteSnapshot for tests.\nIf you pass params, then the created snapshot's paramMap will contain the same values.\nThe same goes for queryParams and queryParamMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nngx-speculoos\nngx-speculoos helps you write simpler, cleaner unit tests for your Angular components, based on the\npage object pattern. It also provides utilities to make writing Angular unit tests.\nThe library simply wraps the standard Angular ComponentFixture, and you should thus be \nable to understand and start using ngx-speculoos in just a few minutes if you already know\nhow to write Angular unit tests.\nWhy should you care?\nIf you've ever written tests like the following:\nit('should display French cities when selecting the country France', () => {\n  const countrySelect = fixture.nativeElement.querySelector('#country'); // countrySelect is of type any\n  countrySelect.selectedIndex = 12; // what is at index 12?\n  countrySelect.dispatchEvent(new Event('change')); // why do I need to do that?\n  fixture.detectChanges();\n\n  const city = fixture.nativeElement.querySelector('#city'); // city is of type any\n  expect(city).toBeTruthy();\n  expect(city.options.length).toBe(3);\n  expect(city.options[0].value).toBe('');\n  expect(city.options[0].label).toBe('');\n  expect(city.options[1].value).toBe('PARIS');\n  expect(city.options[1].label).toBe('Paris');\n  expect(city.options[2].value).toBe('LYON');\n  expect(city.options[2].label).toBe('Lyon');\n});\n\nit('should hide cities when selecting the empty country option', () => {\n  const countrySelect = fixture.nativeElement.querySelector('#country'); // I did that previously. What about DRY?\n  countrySelect.selectedIndex = 0;\n  countrySelect.dispatchEvent(new Event('change')); // why do I need to do that?\n  fixture.detectChanges(); // why do I need to do that?\n\n  expect(fixture.nativeElement.querySelector('#city')).toBeFalsy(); // I did that previously. What about DRY?\n});ngx-speculoos allows writing the above tests in a simpler, cleaner way. \nBy using the page object pattern (which is optional, but recommended), you avoid repetitions. \nBy using wrappers around elements, dispatching events and triggering change detection is automatic.\nBy using wrappers around elements, you get useful additional methods to make tests easier to write and read.\nIn any case you need them, you always have access to the fixture, the native elements, the debug elements, etc.\nclass MyComponentTester extends ComponentTester {\n  constructor() {\n    super(MyComponent);\n  }\n\n  get country() {\n    return this.select('#country'); // returns a TestSelect object, not any. Similar methods exist for inputs, buttons, etc.\n  }\n\n  get city() {\n    return this.select('#city'); // returns a TestSelect object, not any\n  }\n}\n\n[...]\n\nit('should display French cities when selecting the country France', () => {\n  tester.country.selectLabel('France'); // no dispatchEvent, no detectChanges needed\n\n  expect(tester.city.optionValues).toEqual(['', 'PARIS', 'LYON']);\n  expect(tester.city.optionLabels).toEqual(['', 'Paris', 'Lyon']);\n});\n\nit('should hide cities when selecting empty country option', () => {\n  tester.country.selectIndex(0); // no repetition of the selector, no dispatchEvent, no detectChanges needed\n\n  expect(tester.city).toBeFalsy(); // no repetition of the selector\n});Installation\nUsing npm: npm install --save-dev ngx-speculoos\nUsing yarn: yarn add --dev ngx-speculoos\nGetting started\n\nimport ComponentTester, and other needed classes from ngx-speculoos\nCreate a MyComponentTester class (in your my-component.spec.ts file, typically) extending \nComponentTester, as shown above.\nExpose getters (or methods, if you prefer) returning the elements used in your tests, using\none of the ComponentTester methods (element, elements, input, select, textarea, button).\nSee the API documentation for details\nWrite your tests, as shown above, benefitting from the additional methods on the TestXxx classes.\nIf needed, you can always get the fixture, componentInstance, debugElement, nativeElement, etc.\nfrom the ComponentTester, and the nativeElement from each TestXxx wrapper.\n\nIssues, questions\nPlease, provide feedback by filing issues, or by submitting pull requests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Ninja Squad\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        7 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
