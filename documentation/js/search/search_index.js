var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/ComponentTester.html",[0,0.093,1,0.487]],["body/classes/ComponentTester.html",[0,0.082,1,0.727,2,0.415,3,0.415,4,0.273,5,4.298,6,1.377,7,1.142,8,2.165,9,2.165,10,2.165,11,1.685,12,1.153,13,1.685,14,3.222,15,2.165,16,1.685,17,0.793,18,1.102,19,0.936,20,1.369,21,0.683,22,1.189,23,1.345,24,1.272,25,1.198,26,0.213,27,1.272,28,3.531,29,0.963,30,2.676,31,2.398,32,1.685,33,1.294,34,1.175,35,1.203,36,0.34,37,2.165,38,1.158,39,0.073,40,1.28,41,1.377,42,1.306,43,1.095,44,3.298,45,3.034,46,1.685,47,2.165,48,0.986,49,0.963,50,0.774,51,3.034,52,1.377,53,1.377,54,0.808,55,0.786,56,1.601,57,1.377,58,1.203,59,0.07,60,1.424,61,1.418,62,1.418,63,1.418,64,1.525,65,1.576,66,1.161,67,0.66,68,1.622,69,2.165,70,1.377,71,2.676,72,1.377,73,2.165,74,2.676,75,1.377,76,0.534,77,0.43,78,0.534,79,1.377,80,1.377,81,0.415,82,0.786,83,1.377,84,0.652,85,1.102,86,1.175,87,0.913,88,0.786,89,0.786,90,1.377,91,1.378,92,0.786,93,0.652,94,0.786,95,1.377,96,0.786,97,1.377,98,0.66,99,0.786,100,1.377,101,0.806,102,0.5,103,1.369,104,1.071,105,1.377,106,1.685,107,0.786,108,2.165,109,2.165,110,1.685,111,1.377,112,1.377,113,2.165,114,0.814,115,1.377,116,1.377,117,0.652,118,0.936,119,1.377,120,0.34,121,1.071,122,1.071,123,1.654,124,0.415,125,0.87,126,1.377,127,0.72,128,1.377,129,1.377,130,1.377,131,1.377,132,1.377,133,1.377,134,1.377,135,1.377,136,1.377,137,1.377,138,1.377,139,1.377,140,1.377,141,1.377,142,1.377,143,1.377,144,0.032]],["title/classes/TestButton.html",[0,0.093,67,0.606]],["body/classes/TestButton.html",[0,0.147,1,0.872,2,0.946,3,0.946,4,0.624,7,0.946,12,1.038,19,1.084,22,1.084,26,0.487,29,1.084,36,0.775,38,0.775,39,0.073,40,1.267,43,0.775,48,0.775,49,0.775,50,0.624,54,0.835,59,0.057,66,0.957,67,0.957,76,0.775,77,0.624,78,0.775,81,0.946,102,1.142,114,1.161,118,1.038,120,0.775,124,0.946,144,0.057,145,1.528,146,3.144,147,0.957,148,1.168,149,1.409,150,1.168,151,1.168,152,1.409,153,1.596,154,1.915,155,1.409,156,3.144,157,1.409,158,1.37,159,1.644,160,4.394,161,3.144,162,3.144,163,3.88,164,1.37,165,1.37,166,3.144]],["title/classes/TestElement.html",[0,0.093,23,0.739]],["body/classes/TestElement.html",[0,0.136,1,0.623,2,0.442,3,0.442,4,0.291,7,1.167,12,1.142,17,0.623,18,0.827,19,0.957,21,0.68,22,1.199,23,1.266,24,1.141,25,1.141,26,0.227,27,1.013,29,0.982,33,1.311,34,1.199,35,1.225,36,0.362,38,1.124,39,0.073,40,1.298,42,1.342,43,0.362,48,1.004,49,1.084,50,0.807,54,0.744,55,0.827,56,1.669,58,1.225,59,0.071,60,1.433,61,1.446,62,1.446,63,1.446,64,1.548,65,1.619,66,1.166,67,0.688,68,1.639,76,0.775,77,0.623,78,0.775,81,0.685,82,0.827,84,0.685,85,1.141,86,1.199,87,0.946,88,0.827,89,0.827,91,1.528,92,0.827,93,0.685,94,0.827,96,0.827,98,0.688,99,0.827,101,0.839,102,0.533,103,1.439,104,1.142,107,0.827,114,1.051,117,0.685,118,0.926,120,0.362,121,1.772,122,1.772,123,1.635,124,0.442,127,0.768,144,0.034,145,1.581,147,0.562,148,0.685,149,1.306,150,0.685,151,0.685,155,0.533,157,1.013,167,1.142,168,1.215,169,0.992,170,0.827,171,0.992,172,1.468,173,1.468,174,0.992,175,1.468,176,1.468,177,0.992,178,1.167,179,1.468,180,1.141,181,0.992,182,1.468,183,1.468,184,1.468,185,1.468,186,1.468,187,1.468,188,1.468,189,2.277,190,1.468,191,1.468,192,1.772,193,2.277,194,1.468,195,1.468,196,1.468,197,1.468,198,1.468,199,1.468,200,1.468,201,1.468,202,1.468,203,1.468,204,1.468,205,1.772,206,1.468,207,1.468,208,1.468,209,1.468,210,1.468,211,1.468,212,1.468,213,1.468,214,1.468]],["title/classes/TestHtmlElement.html",[0,0.093,153,0.892]],["body/classes/TestHtmlElement.html",[0,0.109,1,0.727,2,0.603,3,0.603,4,0.397,7,1.28,12,1.134,17,0.57,18,1.043,19,0.996,21,0.644,22,1.193,23,1.406,24,1.043,25,1.043,26,0.31,27,1.043,29,0.957,33,1.28,34,1.168,35,1.168,36,0.494,38,1.146,39,0.072,40,1.353,42,1.304,43,0.494,48,1.084,49,1.118,50,0.872,54,0.666,55,0.728,56,1.679,58,1.168,59,0.07,60,1.411,61,1.331,62,1.331,63,1.331,64,1.466,65,1.545,66,1.127,67,0.494,68,1.596,76,0.904,77,0.727,78,0.904,81,1.01,82,0.728,84,0.603,85,1.043,86,1.103,87,0.864,88,0.728,89,0.728,91,1.331,92,0.728,93,0.603,94,0.728,96,0.728,98,0.494,99,0.728,101,0.603,107,1.043,114,1.118,117,0.603,118,0.828,120,0.494,124,0.603,144,0.042,145,1.219,147,0.708,148,0.864,149,1.331,150,0.864,151,0.864,152,1.043,153,1.043,154,1.759,155,1.043,157,1.043,158,1.915,164,1.691,165,0.873,167,1.559,168,1.251,169,1.251,170,1.043,171,1.251,174,0.873,177,0.873,178,1.168,180,1.043,181,0.873,205,1.559,215,2.004,216,2.004,217,2.004,218,2.004,219,2.004,220,2.004,221,2.004,222,2.004,223,2.004,224,2.004,225,2.004,226,2.004,227,2.004]],["title/classes/TestInput.html",[0,0.093,86,0.739]],["body/classes/TestInput.html",[0,0.097,1,0.678,2,0.52,3,0.52,4,0.343,7,1.255,12,1.156,17,0.511,18,1.241,19,0.945,21,0.615,22,1.176,23,1.1,24,0.936,25,0.936,26,0.268,27,0.936,29,0.901,33,1.411,34,1.1,35,1.1,36,0.426,38,1.156,39,0.073,40,1.369,42,1.255,43,0.426,48,1.063,49,1.098,50,0.855,54,0.611,55,0.627,56,1.67,58,1.1,59,0.069,60,1.384,61,1.241,62,1.241,63,1.241,64,1.392,65,1.482,66,1.134,67,0.426,68,1.542,76,1.029,77,0.875,78,1.029,81,1.153,82,0.627,84,1.313,85,0.936,86,1.153,87,0.776,88,0.627,89,0.627,91,1.241,92,0.627,93,0.52,94,0.627,96,0.627,98,0.426,99,0.627,101,0.52,102,0.627,107,0.936,114,1.088,117,0.52,118,0.76,120,0.426,123,0.753,124,0.52,127,1.347,144,0.038,145,1.442,147,0.636,148,0.776,149,1.241,150,0.776,151,0.776,152,0.936,153,1.617,154,1.488,155,0.936,157,0.936,158,1.877,159,0.903,164,1.343,165,0.753,168,1.123,169,1.123,170,0.936,171,1.123,174,0.753,177,0.753,178,1.297,180,1.482,181,0.753,228,1.728,229,4.245,230,2.005,231,3.832,232,1.728,233,1.092,234,1.728,235,2.005,236,1.728,237,1.628,238,1.728,239,1.092,240,1.092,241,1.092,242,1.092,243,1.092,244,1.092,245,1.092,246,1.092,247,1.092,248,1.344,249,1.728,250,1.728,251,1.728,252,2.005,253,1.344,254,3.081,255,1.728,256,2.005,257,1.728]],["title/classes/TestSelect.html",[0,0.093,98,0.606]],["body/classes/TestSelect.html",[0,0.088,1,0.634,2,0.456,3,0.456,4,0.301,7,1.179,12,1.112,17,0.463,18,0.847,19,0.899,21,0.588,22,1.162,23,1.038,24,0.847,25,0.847,26,0.647,27,0.847,29,0.851,33,1.179,34,1.407,35,1.038,36,0.374,38,1.146,39,0.073,40,1.372,42,1.358,43,0.374,48,1.059,49,1.09,50,0.94,54,0.564,55,0.55,56,1.682,58,1.21,59,0.068,60,1.358,61,1.423,62,1.16,63,1.16,64,1.323,65,1.423,66,1.146,67,0.374,68,1.605,76,0.991,77,0.869,78,0.991,81,1.097,82,0.55,84,1.21,85,0.847,86,0.962,87,0.702,88,0.55,89,0.55,91,1.49,92,0.55,93,0.456,94,0.55,96,0.55,98,0.702,99,0.55,101,0.456,102,0.55,107,0.847,114,1.059,117,0.456,118,0.702,120,0.374,124,0.456,125,1.474,144,0.034,145,1.517,147,0.575,148,0.702,149,1.16,150,0.702,151,0.702,152,0.847,153,1.576,154,1.392,155,0.847,157,0.847,158,1.82,159,0.792,164,1.239,165,0.66,168,1.016,169,1.016,170,0.847,171,1.016,174,0.66,177,0.66,178,1.257,180,1.423,181,0.66,192,2.684,233,0.958,239,0.958,240,0.958,241,0.958,242,0.958,243,0.958,244,0.958,245,0.958,246,0.958,247,0.958,256,1.179,258,1.515,259,2.333,260,2.333,261,2.333,262,1.515,263,2.333,264,3.795,265,1.515,266,2.333,267,1.515,268,4.176,269,3.194,270,3.194,271,3.194,272,2.333,273,1.515,274,2.333,275,1.515,276,1.515,277,2.333,278,1.515,279,1.515,280,1.515,281,1.515,282,1.515,283,1.515,284,1.515,285,1.515,286,2.333,287,1.515,288,1.515,289,2.333,290,1.515,291,1.515,292,2.333,293,1.515,294,1.815,295,2.333,296,1.515,297,1.515,298,2.333,299,2.333,300,1.515,301,1.515,302,1.515]],["title/classes/TestTextArea.html",[0,0.093,101,0.739]],["body/classes/TestTextArea.html",[0,0.104,1,0.706,2,0.567,3,0.567,4,0.373,7,1.284,12,1.142,17,0.544,18,0.997,19,0.975,21,0.632,22,1.185,23,1.139,24,0.997,25,0.997,26,0.292,27,0.997,29,0.934,33,1.304,34,1.139,35,1.349,36,0.464,38,1.152,39,0.072,40,1.361,42,1.284,43,0.464,48,1.083,49,1.115,50,0.871,54,0.643,55,0.684,56,1.689,58,1.139,59,0.069,60,1.4,61,1.293,62,1.293,63,1.293,64,1.435,65,1.519,66,1.13,67,0.464,68,1.574,76,0.934,77,0.751,78,0.934,81,1.072,82,0.684,84,1.337,85,0.997,86,1.072,87,0.826,88,0.684,89,0.684,91,1.293,92,0.684,93,0.567,94,0.684,96,0.684,98,0.464,99,0.684,101,0.975,102,0.684,107,0.997,114,1.106,117,0.567,118,0.799,120,0.464,123,0.82,124,0.567,127,1.435,144,0.04,145,1.293,147,0.677,148,0.826,149,1.293,150,0.826,151,0.826,152,0.997,153,1.641,154,1.551,155,0.997,157,0.997,158,1.913,159,0.984,164,1.411,165,0.82,168,1.196,169,1.196,170,0.997,171,1.196,174,0.82,177,0.82,178,1.228,180,1.293,181,0.82,230,2.136,233,1.19,235,2.136,237,1.735,239,1.19,240,1.19,241,1.19,242,1.19,243,1.19,244,1.19,245,1.19,246,1.19,247,1.19,248,1.465,252,2.136,253,1.465,303,1.882,304,1.882,305,1.882,306,1.882]],["title/changelog.html",[21,0.321,307,1.083,308,2.071]],["body/changelog.html",[39,0.064,58,1.139,59,0.064,77,0.751,144,0.064,309,3.783,310,3.783,311,2.944,312,3.783,313,3.783,314,3.783,315,3.783,316,3.783]],["title/dependencies.html",[317,2.071,318,2.288]],["body/dependencies.html",[39,0.07,59,0.064,120,0.932,144,0.064,318,2.939,319,3.777,320,4.548,321,3.777,322,3.777]],["title/miscellaneous/functions.html",[323,1.612,324,2.288]],["body/miscellaneous/functions.html",[17,0.783,20,2.496,26,0.501,31,2.805,39,0.065,42,0.974,46,3.647,48,0.974,49,0.974,50,0.88,54,0.88,59,0.058,84,1.189,123,1.721,144,0.058,237,2.496,323,2.519,324,2.519,325,3.95,326,3.95,327,3.95,328,3.237,329,3.237,330,3.95,331,3.95,332,3.95,333,3.237,334,3.95,335,3.95,336,3.95,337,4.439,338,3.95,339,3.95,340,3.95,341,4.766,342,3.95,343,4.63,344,3.237,345,4.263,346,3.95,347,3.95,348,3.95,349,3.95,350,3.237,351,2.519,352,3.237,353,3.237]],["title/index.html",[21,0.321,26,0.321,307,1.083]],["body/index.html",[0,0.149,1,0.818,4,0.64,11,1.843,12,0.584,13,3.068,14,1.843,16,1.843,17,0.892,19,1.018,20,1.497,21,0.367,22,1.075,26,0.367,28,2.511,29,0.796,31,1.497,32,2.511,33,0.972,34,1.242,35,0.713,36,0.584,38,0.796,39,0.073,43,0.584,50,0.728,54,0.88,59,0.048,60,0.972,66,1.018,76,0.584,77,0.47,78,0.584,87,0.713,93,0.972,98,0.796,103,2.04,106,1.843,110,1.843,114,0.584,117,0.713,118,0.584,125,2.32,144,0.048,147,0.796,148,0.972,150,0.713,151,1.282,152,1.172,170,1.172,178,0.713,180,0.86,294,1.843,307,1.688,354,4.357,355,4.357,356,3.227,357,3.227,358,3.672,359,2.368,360,3.227,361,3.943,362,3.227,363,2.368,364,3.227,365,2.368,366,2.368,367,2.368,368,2.368,369,2.368,370,2.368,371,2.368,372,2.368,373,2.368,374,2.368,375,2.368,376,1.843,377,3.943,378,3.227,379,3.227,380,4.357,381,4.126,382,3.227,383,3.672,384,3.227,385,3.227,386,3.227,387,3.227,388,3.227,389,4.434,390,3.227,391,2.368,392,2.368,393,2.368,394,2.368,395,2.368,396,2.368,397,2.368,398,2.368,399,2.368,400,3.227,401,3.227,402,3.227,403,2.368,404,2.857,405,2.368,406,2.368,407,2.368,408,3.672,409,3.672,410,3.227,411,2.368,412,2.368,413,2.368,414,2.368,415,3.227,416,3.672,417,3.227,418,2.368,419,2.368,420,2.368,421,2.368,422,2.368,423,2.368,424,2.368,425,3.227,426,3.227,427,2.368,428,2.368,429,2.368,430,3.227,431,3.227,432,2.368,433,3.227,434,3.227,435,2.368,436,2.368,437,2.368,438,3.227,439,2.368,440,2.368,441,2.368,442,2.368,443,2.368,444,1.843,445,2.368,446,2.368,447,3.227,448,2.368,449,3.227,450,2.368,451,2.368,452,2.368,453,2.368,454,2.368,455,2.368,456,2.368,457,2.368]],["title/license.html",[21,0.321,307,1.083,458,1.612]],["body/license.html",[4,0.652,17,0.791,39,0.059,59,0.059,144,0.059,147,0.811,178,0.99,311,2.558,351,3.34,376,2.558,404,2.558,444,2.558,458,2.558,459,3.288,460,4.292,461,3.288,462,3.288,463,3.288,464,3.987,465,3.288,466,3.288,467,3.288,468,3.288,469,3.987,470,3.288,471,4.462,472,4.779,473,3.288,474,3.987,475,3.288,476,4.292,477,3.987,478,3.288,479,3.288,480,3.288,481,3.288,482,3.288,483,3.288,484,3.288,485,3.288,486,3.288,487,3.288,488,3.288,489,3.288,490,3.987,491,3.987,492,3.288,493,3.288,494,3.987,495,3.288,496,3.288,497,3.288,498,3.288,499,3.288,500,3.288,501,3.288,502,3.288,503,3.288,504,3.288,505,3.288,506,3.288,507,3.288,508,3.288,509,3.288,510,3.288,511,3.288,512,3.288,513,3.288,514,3.288,515,3.288,516,3.288]],["title/modules.html",[517,2.573]],["body/modules.html",[39,0.064,59,0.064,144,0.064,517,2.993]],["title/overview.html",[518,2.573]],["body/overview.html",[0,0.145,39,0.064,59,0.064,144,0.064,518,2.982,519,3.832]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":294,"title":{},"body":{"classes/TestSelect.html":{},"index.html":{}}}],["0.1.0",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":386,"title":{},"body":{"index.html":{}}}],["2018",{"_index":311,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["25",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":519,"title":{},"body":{"overview.html":{}}}],["abov",{"_index":404,"title":{},"body":{"index.html":{},"license.html":{}}}],["access",{"_index":16,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["accessor",{"_index":102,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["action",{"_index":510,"title":{},"body":{"license.html":{}}}],["activatedrout",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activatedroutesnapshot",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["actual",{"_index":64,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["add",{"_index":435,"title":{},"body":{"index.html":{}}}],["addit",{"_index":148,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["allow",{"_index":20,"title":{},"body":{"classes/ComponentTester.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["alreadi",{"_index":371,"title":{},"body":{"index.html":{}}}],["alway",{"_index":415,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":484,"title":{},"body":{"license.html":{}}}],["angular",{"_index":13,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["angular/cor",{"_index":120,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"dependencies.html":{}}}],["angular/core/test",{"_index":119,"title":{},"body":{"classes/ComponentTester.html":{}}}],["angular/rout",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":11,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["arg",{"_index":51,"title":{},"body":{"classes/ComponentTester.html":{}}}],["aris",{"_index":514,"title":{},"body":{"license.html":{}}}],["around",{"_index":410,"title":{},"body":{"index.html":{}}}],["array",{"_index":91,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["array).map(opt",{"_index":299,"title":{},"body":{"classes/TestSelect.html":{}}}],["array.prototype.slice.call(this.nativeelement.classlist",{"_index":207,"title":{},"body":{"classes/TestElement.html":{}}}],["array.prototype.slice.call(this.nativeelement.opt",{"_index":298,"title":{},"body":{"classes/TestSelect.html":{}}}],["associ",{"_index":473,"title":{},"body":{"license.html":{}}}],["attr",{"_index":169,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["attr(nam",{"_index":174,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["attribut",{"_index":149,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["author",{"_index":503,"title":{},"body":{"license.html":{}}}],["automat",{"_index":411,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":407,"title":{},"body":{"index.html":{}}}],["base",{"_index":359,"title":{},"body":{"index.html":{}}}],["benefit",{"_index":446,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":74,"title":{},"body":{"classes/ComponentTester.html":{}}}],["button",{"_index":29,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["button(selector",{"_index":55,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["button.t",{"_index":146,"title":{},"body":{"classes/TestButton.html":{}}}],["button.ts:16",{"_index":162,"title":{},"body":{"classes/TestButton.html":{}}}],["button.ts:8",{"_index":156,"title":{},"body":{"classes/TestButton.html":{}}}],["c",{"_index":461,"title":{},"body":{"license.html":{}}}],["care",{"_index":373,"title":{},"body":{"index.html":{}}}],["case",{"_index":414,"title":{},"body":{"index.html":{}}}],["champagn",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":77,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"changelog.html":{},"index.html":{}}}],["changelog",{"_index":308,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":468,"title":{},"body":{"license.html":{}}}],["check",{"_index":229,"title":{},"body":{"classes/TestInput.html":{}}}],["checknochang",{"_index":79,"title":{},"body":{"classes/ComponentTester.html":{}}}],["citi",{"_index":380,"title":{},"body":{"index.html":{}}}],["claim",{"_index":506,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{},"overview.html":{}}}],["cleaner",{"_index":357,"title":{},"body":{"index.html":{}}}],["click",{"_index":154,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["code",{"_index":346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compon",{"_index":43,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["component.spec.t",{"_index":436,"title":{},"body":{"index.html":{}}}],["componentfixtur",{"_index":14,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["componentinst",{"_index":110,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["componenttest",{"_index":1,"title":{"classes/ComponentTester.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["componenttester(fixtur",{"_index":128,"title":{},"body":{"classes/ComponentTester.html":{}}}],["componenttyp",{"_index":72,"title":{},"body":{"classes/ComponentTester.html":{}}}],["condit",{"_index":489,"title":{},"body":{"license.html":{}}}],["connect",{"_index":516,"title":{},"body":{"license.html":{}}}],["const",{"_index":125,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestSelect.html":{},"index.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["constructor(arg",{"_index":37,"title":{},"body":{"classes/ComponentTester.html":{}}}],["constructor(protect",{"_index":197,"title":{},"body":{"classes/TestElement.html":{}}}],["constructor(test",{"_index":155,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["contain",{"_index":336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["content",{"_index":193,"title":{},"body":{"classes/TestElement.html":{}}}],["contract",{"_index":511,"title":{},"body":{"license.html":{}}}],["copi",{"_index":471,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":460,"title":{},"body":{"license.html":{}}}],["countri",{"_index":381,"title":{},"body":{"index.html":{}}}],["countryselect",{"_index":383,"title":{},"body":{"index.html":{}}}],["countryselect.dispatchevent(new",{"_index":387,"title":{},"body":{"index.html":{}}}],["countryselect.selectedindex",{"_index":385,"title":{},"body":{"index.html":{}}}],["creat",{"_index":31,"title":{},"body":{"classes/ComponentTester.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["create(componenttyp",{"_index":69,"title":{},"body":{"classes/ComponentTester.html":{}}}],["css",{"_index":65,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["damag",{"_index":507,"title":{},"body":{"license.html":{}}}],["deal",{"_index":474,"title":{},"body":{"license.html":{}}}],["debug",{"_index":117,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["debugel",{"_index":114,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["defin",{"_index":40,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["deleg",{"_index":45,"title":{},"body":{"classes/ComponentTester.html":{}}}],["depend",{"_index":318,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descript",{"_index":7,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["detail",{"_index":445,"title":{},"body":{"index.html":{}}}],["detect",{"_index":78,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["detectchang",{"_index":32,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["detectchanges(checknochang",{"_index":73,"title":{},"body":{"classes/ComponentTester.html":{}}}],["dev",{"_index":433,"title":{},"body":{"index.html":{}}}],["directli",{"_index":47,"title":{},"body":{"classes/ComponentTester.html":{}}}],["disabl",{"_index":160,"title":{},"body":{"classes/TestButton.html":{}}}],["dispatch",{"_index":180,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["dispatchev",{"_index":170,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["dispatchevent(ev",{"_index":177,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["dispatcheventoftyp",{"_index":171,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["dispatcheventoftype(typ",{"_index":181,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["display",{"_index":378,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":482,"title":{},"body":{"license.html":{}}}],["document",{"_index":444,"title":{},"body":{"index.html":{},"license.html":{}}}],["doesn't",{"_index":344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dom",{"_index":107,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["don't",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dri",{"_index":402,"title":{},"body":{"index.html":{}}}],["e",{"_index":200,"title":{},"body":{"classes/TestElement.html":{}}}],["each",{"_index":448,"title":{},"body":{"index.html":{}}}],["easier",{"_index":412,"title":{},"body":{"index.html":{}}}],["element",{"_index":22,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["element(selector",{"_index":82,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["element.t",{"_index":167,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{}}}],["element.ts:104",{"_index":186,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:114",{"_index":187,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:123",{"_index":176,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:14",{"_index":172,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:16",{"_index":217,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["element.ts:20",{"_index":173,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:24",{"_index":188,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:31",{"_index":191,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:38",{"_index":182,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:46",{"_index":179,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:54",{"_index":195,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:62",{"_index":175,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:74",{"_index":183,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:8",{"_index":215,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["element.ts:86",{"_index":184,"title":{},"body":{"classes/TestElement.html":{}}}],["element.ts:95",{"_index":185,"title":{},"body":{"classes/TestElement.html":{}}}],["elements(selector",{"_index":89,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["empti",{"_index":93,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["entri",{"_index":9,"title":{},"body":{"classes/ComponentTester.html":{}}}],["error",{"_index":62,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["etc",{"_index":416,"title":{},"body":{"index.html":{}}}],["event",{"_index":178,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{},"license.html":{}}}],["event('chang",{"_index":388,"title":{},"body":{"index.html":{}}}],["event(typ",{"_index":204,"title":{},"body":{"classes/TestElement.html":{}}}],["exampl",{"_index":25,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["exist",{"_index":421,"title":{},"body":{"index.html":{}}}],["expect(city).tobetruthi",{"_index":392,"title":{},"body":{"index.html":{}}}],["expect(city.options.length).tobe(3",{"_index":393,"title":{},"body":{"index.html":{}}}],["expect(city.options[0].label).tob",{"_index":395,"title":{},"body":{"index.html":{}}}],["expect(city.options[0].value).tob",{"_index":394,"title":{},"body":{"index.html":{}}}],["expect(city.options[1].label).tobe('pari",{"_index":397,"title":{},"body":{"index.html":{}}}],["expect(city.options[1].value).tobe('pari",{"_index":396,"title":{},"body":{"index.html":{}}}],["expect(city.options[2].label).tobe('lyon",{"_index":399,"title":{},"body":{"index.html":{}}}],["expect(city.options[2].value).tobe('lyon",{"_index":398,"title":{},"body":{"index.html":{}}}],["expect(fixture.nativeelement.queryselector('#city')).tobefalsi",{"_index":403,"title":{},"body":{"index.html":{}}}],["expect(tester.city).tobefalsi",{"_index":429,"title":{},"body":{"index.html":{}}}],["expect(tester.city.optionlabels).toequ",{"_index":427,"title":{},"body":{"index.html":{}}}],["expect(tester.city.optionvalues).toequ",{"_index":424,"title":{},"body":{"index.html":{}}}],["export",{"_index":124,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["expos",{"_index":439,"title":{},"body":{"index.html":{}}}],["express",{"_index":496,"title":{},"body":{"license.html":{}}}],["extend",{"_index":152,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["fake",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fakerout",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fakeroute(opt",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fakesnapshot",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fakesnapshot(opt",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fals",{"_index":257,"title":{},"body":{"classes/TestInput.html":{}}}],["feedback",{"_index":452,"title":{},"body":{"index.html":{}}}],["few",{"_index":369,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{},"license.html":{}}}],["fillwith",{"_index":230,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["fillwith(valu",{"_index":235,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["first",{"_index":58,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"changelog.html":{}}}],["fit",{"_index":499,"title":{},"body":{"license.html":{}}}],["fixtur",{"_index":28,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["fixture.detectchang",{"_index":390,"title":{},"body":{"index.html":{}}}],["fixture.nativeelement.queryselector('#c",{"_index":391,"title":{},"body":{"index.html":{}}}],["fixture.nativeelement.queryselector('#countri",{"_index":384,"title":{},"body":{"index.html":{}}}],["flag",{"_index":163,"title":{},"body":{"classes/TestButton.html":{}}}],["follow",{"_index":376,"title":{},"body":{"index.html":{},"license.html":{}}}],["found",{"_index":85,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["franc",{"_index":382,"title":{},"body":{"index.html":{}}}],["free",{"_index":467,"title":{},"body":{"license.html":{}}}],["french",{"_index":379,"title":{},"body":{"index.html":{}}}],["function",{"_index":324,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnish",{"_index":487,"title":{},"body":{"license.html":{}}}],["get",{"_index":21,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["getcheck",{"_index":250,"title":{},"body":{"classes/TestInput.html":{}}}],["getclass",{"_index":194,"title":{},"body":{"classes/TestElement.html":{}}}],["getcomponentinst",{"_index":111,"title":{},"body":{"classes/ComponentTester.html":{}}}],["getdebugel",{"_index":115,"title":{},"body":{"classes/ComponentTester.html":{}}}],["getdis",{"_index":161,"title":{},"body":{"classes/TestButton.html":{}}}],["getnativeel",{"_index":104,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{}}}],["getoptionlabel",{"_index":287,"title":{},"body":{"classes/TestSelect.html":{}}}],["getoptionvalu",{"_index":284,"title":{},"body":{"classes/TestSelect.html":{}}}],["getselectedindex",{"_index":275,"title":{},"body":{"classes/TestSelect.html":{}}}],["getselectedlabel",{"_index":281,"title":{},"body":{"classes/TestSelect.html":{}}}],["getselectedvalu",{"_index":278,"title":{},"body":{"classes/TestSelect.html":{}}}],["getsiz",{"_index":290,"title":{},"body":{"classes/TestSelect.html":{}}}],["getter",{"_index":440,"title":{},"body":{"index.html":{}}}],["gettextcont",{"_index":190,"title":{},"body":{"classes/TestElement.html":{}}}],["getvalu",{"_index":248,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["github",{"_index":456,"title":{},"body":{"index.html":{}}}],["give",{"_index":15,"title":{},"body":{"classes/ComponentTester.html":{}}}],["given",{"_index":42,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["goe",{"_index":338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["grant",{"_index":466,"title":{},"body":{"license.html":{}}}],["help",{"_index":150,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["herebi",{"_index":465,"title":{},"body":{"license.html":{}}}],["hide",{"_index":400,"title":{},"body":{"index.html":{}}}],["holder",{"_index":504,"title":{},"body":{"license.html":{}}}],["host",{"_index":108,"title":{},"body":{"classes/ComponentTester.html":{}}}],["html",{"_index":164,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["htmlelement",{"_index":109,"title":{},"body":{"classes/ComponentTester.html":{}}}],["impli",{"_index":497,"title":{},"body":{"license.html":{}}}],["import",{"_index":118,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["includ",{"_index":476,"title":{},"body":{"license.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["inherit",{"_index":158,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["input",{"_index":33,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["input(selector",{"_index":94,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["input.t",{"_index":228,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:17",{"_index":236,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:25",{"_index":249,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:32",{"_index":251,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:39",{"_index":234,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:47",{"_index":238,"title":{},"body":{"classes/TestInput.html":{}}}],["input.ts:8",{"_index":232,"title":{},"body":{"classes/TestInput.html":{}}}],["instal",{"_index":430,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":113,"title":{},"body":{"classes/ComponentTester.html":{}}}],["instanceof",{"_index":130,"title":{},"body":{"classes/ComponentTester.html":{}}}],["instead",{"_index":271,"title":{},"body":{"classes/TestSelect.html":{}}}],["isn't",{"_index":63,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["issu",{"_index":449,"title":{},"body":{"index.html":{}}}],["it('should",{"_index":377,"title":{},"body":{"index.html":{}}}],["kind",{"_index":495,"title":{},"body":{"license.html":{}}}],["know",{"_index":372,"title":{},"body":{"index.html":{}}}],["label",{"_index":268,"title":{},"body":{"classes/TestSelect.html":{}}}],["liabil",{"_index":508,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":505,"title":{},"body":{"license.html":{}}}],["librari",{"_index":365,"title":{},"body":{"index.html":{}}}],["licens",{"_index":458,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":477,"title":{},"body":{"license.html":{}}}],["log",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["lyon",{"_index":426,"title":{},"body":{"index.html":{}}}],["main",{"_index":8,"title":{},"body":{"classes/ComponentTester.html":{}}}],["make",{"_index":364,"title":{},"body":{"index.html":{}}}],["match",{"_index":59,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["merchant",{"_index":498,"title":{},"body":{"license.html":{}}}],["merg",{"_index":480,"title":{},"body":{"license.html":{}}}],["method",{"_index":19,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["minut",{"_index":370,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":323,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":459,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":479,"title":{},"body":{"license.html":{}}}],["modul",{"_index":517,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mycomponenttest",{"_index":417,"title":{},"body":{"index.html":{}}}],["name",{"_index":49,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["nativ",{"_index":106,"title":{},"body":{"classes/ComponentTester.html":{},"index.html":{}}}],["nativeel",{"_index":103,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"index.html":{}}}],["need",{"_index":389,"title":{},"body":{"index.html":{}}}],["new",{"_index":127,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["ngx",{"_index":354,"title":{},"body":{"index.html":{}}}],["ninja",{"_index":462,"title":{},"body":{"license.html":{}}}],["noninfring",{"_index":502,"title":{},"body":{"license.html":{}}}],["noth",{"_index":269,"title":{},"body":{"classes/TestSelect.html":{}}}],["notic",{"_index":490,"title":{},"body":{"license.html":{}}}],["npm",{"_index":431,"title":{},"body":{"index.html":{}}}],["null",{"_index":68,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["number",{"_index":264,"title":{},"body":{"classes/TestSelect.html":{}}}],["object",{"_index":361,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":470,"title":{},"body":{"license.html":{}}}],["on",{"_index":442,"title":{},"body":{"index.html":{}}}],["option",{"_index":50,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["option.label",{"_index":301,"title":{},"body":{"classes/TestSelect.html":{}}}],["option.valu",{"_index":300,"title":{},"body":{"classes/TestSelect.html":{}}}],["optionlabel",{"_index":286,"title":{},"body":{"classes/TestSelect.html":{}}}],["optionvalu",{"_index":283,"title":{},"body":{"classes/TestSelect.html":{}}}],["otherwis",{"_index":513,"title":{},"body":{"license.html":{}}}],["out",{"_index":515,"title":{},"body":{"license.html":{}}}],["overview",{"_index":518,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":317,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":360,"title":{},"body":{"index.html":{}}}],["param",{"_index":123,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestInput.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["paramet",{"_index":48,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parent",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pari",{"_index":425,"title":{},"body":{"index.html":{}}}],["partial",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["particular",{"_index":500,"title":{},"body":{"license.html":{}}}],["pass",{"_index":46,"title":{},"body":{"classes/ComponentTester.html":{},"miscellaneous/functions.html":{}}}],["pattern",{"_index":362,"title":{},"body":{"index.html":{}}}],["peer",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["permiss",{"_index":464,"title":{},"body":{"license.html":{}}}],["permit",{"_index":486,"title":{},"body":{"license.html":{}}}],["person",{"_index":469,"title":{},"body":{"license.html":{}}}],["pleas",{"_index":451,"title":{},"body":{"index.html":{}}}],["point",{"_index":10,"title":{},"body":{"classes/ComponentTester.html":{}}}],["portion",{"_index":493,"title":{},"body":{"license.html":{}}}],["prefer",{"_index":441,"title":{},"body":{"index.html":{}}}],["previous",{"_index":401,"title":{},"body":{"index.html":{}}}],["privat",{"_index":196,"title":{},"body":{"classes/TestElement.html":{}}}],["project",{"_index":457,"title":{},"body":{"index.html":{}}}],["properti",{"_index":18,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["provid",{"_index":147,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":168,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["publish",{"_index":481,"title":{},"body":{"license.html":{}}}],["pull",{"_index":454,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":501,"title":{},"body":{"license.html":{}}}],["querier",{"_index":122,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{}}}],["queryparam",{"_index":339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queryparammap",{"_index":340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["question",{"_index":450,"title":{},"body":{"index.html":{}}}],["read",{"_index":413,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":27,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["recommend",{"_index":406,"title":{},"body":{"index.html":{}}}],["releas",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["repetit",{"_index":408,"title":{},"body":{"index.html":{}}}],["request",{"_index":455,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":475,"title":{},"body":{"license.html":{}}}],["result",{"_index":144,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":66,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["right",{"_index":478,"title":{},"body":{"license.html":{}}}],["rout",{"_index":342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route'",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route.parent.snapshot",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route.snapshot.par",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxj",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["save",{"_index":432,"title":{},"body":{"index.html":{}}}],["see",{"_index":443,"title":{},"body":{"index.html":{}}}],["select",{"_index":34,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["select(selector",{"_index":96,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["select.t",{"_index":258,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:16",{"_index":265,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:26",{"_index":273,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:38",{"_index":267,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:48",{"_index":276,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:55",{"_index":279,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:65",{"_index":282,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:75",{"_index":285,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:8",{"_index":262,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:82",{"_index":288,"title":{},"body":{"classes/TestSelect.html":{}}}],["select.ts:89",{"_index":291,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectedindex",{"_index":274,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectedlabel",{"_index":280,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectedvalu",{"_index":277,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectindex",{"_index":259,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectindex(index",{"_index":263,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectlabel",{"_index":260,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectlabel(label",{"_index":266,"title":{},"body":{"classes/TestSelect.html":{}}}],["selector",{"_index":60,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["selectvalu",{"_index":261,"title":{},"body":{"classes/TestSelect.html":{}}}],["selectvalue(valu",{"_index":272,"title":{},"body":{"classes/TestSelect.html":{}}}],["sell",{"_index":485,"title":{},"body":{"license.html":{}}}],["set",{"_index":237,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["shall",{"_index":491,"title":{},"body":{"license.html":{}}}],["shown",{"_index":438,"title":{},"body":{"index.html":{}}}],["similar",{"_index":420,"title":{},"body":{"index.html":{}}}],["simpler",{"_index":356,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":366,"title":{},"body":{"index.html":{}}}],["size",{"_index":289,"title":{},"body":{"classes/TestSelect.html":{}}}],["snapshot",{"_index":343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["snapshot'",{"_index":345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["softwar",{"_index":472,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["speculoo",{"_index":355,"title":{},"body":{"index.html":{}}}],["squad",{"_index":463,"title":{},"body":{"license.html":{}}}],["src/.../route.t",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/compon",{"_index":5,"title":{},"body":{"classes/ComponentTester.html":{}}}],["src/lib/route.t",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/test",{"_index":145,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["standard",{"_index":367,"title":{},"body":{"index.html":{}}}],["start",{"_index":307,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["static",{"_index":30,"title":{},"body":{"classes/ComponentTester.html":{}}}],["string",{"_index":56,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["subclass",{"_index":24,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["subject",{"_index":488,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":483,"title":{},"body":{"license.html":{}}}],["submit",{"_index":453,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":492,"title":{},"body":{"license.html":{}}}],["super(mycompon",{"_index":418,"title":{},"body":{"index.html":{}}}],["super(test",{"_index":165,"title":{},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["t",{"_index":71,"title":{},"body":{"classes/ComponentTester.html":{}}}],["test",{"_index":54,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testb",{"_index":44,"title":{},"body":{"classes/ComponentTester.html":{}}}],["testbed.createcomponent(arg",{"_index":131,"title":{},"body":{"classes/ComponentTester.html":{}}}],["testbed.createcomponent(componenttyp",{"_index":126,"title":{},"body":{"classes/ComponentTester.html":{}}}],["testbutton",{"_index":67,"title":{"classes/TestButton.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testel",{"_index":23,"title":{"classes/TestElement.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testelement:104",{"_index":225,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:114",{"_index":226,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:123",{"_index":219,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:20",{"_index":216,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:38",{"_index":221,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:46",{"_index":220,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:62",{"_index":218,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:74",{"_index":222,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:86",{"_index":223,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelement:95",{"_index":224,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["testelementqueri",{"_index":121,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{}}}],["testelementquerier(test",{"_index":199,"title":{},"body":{"classes/TestElement.html":{}}}],["testelementquerier.wrap(this.debugel",{"_index":133,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester",{"_index":157,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["tester.country.selectindex(0",{"_index":428,"title":{},"body":{"index.html":{}}}],["tester.country.selectlabel('fr",{"_index":423,"title":{},"body":{"index.html":{}}}],["tester.element('#som",{"_index":88,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["tester.elements('input",{"_index":92,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["tester.t",{"_index":6,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:104",{"_index":97,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:114",{"_index":100,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:123",{"_index":57,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:130",{"_index":75,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:20",{"_index":53,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:25",{"_index":52,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:30",{"_index":70,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:33",{"_index":41,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:48",{"_index":105,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:55",{"_index":112,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:62",{"_index":116,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:74",{"_index":83,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:86",{"_index":90,"title":{},"body":{"classes/ComponentTester.html":{}}}],["tester.ts:95",{"_index":95,"title":{},"body":{"classes/ComponentTester.html":{}}}],["testhtmlel",{"_index":153,"title":{"classes/TestHtmlElement.html":{}},"body":{"classes/TestButton.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:104",{"_index":246,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:114",{"_index":247,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:123",{"_index":240,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:16",{"_index":159,"title":{},"body":{"classes/TestButton.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:20",{"_index":233,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:38",{"_index":242,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:46",{"_index":241,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:62",{"_index":239,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:74",{"_index":243,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:86",{"_index":244,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testhtmlelement:95",{"_index":245,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testinput",{"_index":86,"title":{"classes/TestInput.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testselect",{"_index":98,"title":{"classes/TestSelect.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["testtextarea",{"_index":101,"title":{"classes/TestTextArea.html":{}},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["testxxx",{"_index":447,"title":{},"body":{"index.html":{}}}],["text",{"_index":192,"title":{},"body":{"classes/TestElement.html":{},"classes/TestSelect.html":{}}}],["textarea",{"_index":35,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["textarea(selector",{"_index":99,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["textarea.t",{"_index":303,"title":{},"body":{"classes/TestTextArea.html":{}}}],["textarea.ts:17",{"_index":305,"title":{},"body":{"classes/TestTextArea.html":{}}}],["textarea.ts:25",{"_index":306,"title":{},"body":{"classes/TestTextArea.html":{}}}],["textarea.ts:8",{"_index":304,"title":{},"body":{"classes/TestTextArea.html":{}}}],["textcont",{"_index":189,"title":{},"body":{"classes/TestElement.html":{}}}],["this.debugelement.nativeel",{"_index":201,"title":{},"body":{"classes/TestElement.html":{}}}],["this.dispatcheventoftype('chang",{"_index":256,"title":{},"body":{"classes/TestInput.html":{},"classes/TestSelect.html":{}}}],["this.dispatcheventoftype('input",{"_index":253,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["this.fixtur",{"_index":129,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.fixture.componentinst",{"_index":135,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.fixture.debugel",{"_index":136,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.fixture.detectchanges(checknochang",{"_index":143,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.fixture.nativeel",{"_index":134,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.nativeelement.check",{"_index":254,"title":{},"body":{"classes/TestInput.html":{}}}],["this.nativeelement.click",{"_index":227,"title":{},"body":{"classes/TestHtmlElement.html":{}}}],["this.nativeelement.dis",{"_index":166,"title":{},"body":{"classes/TestButton.html":{}}}],["this.nativeelement.dispatchevent(ev",{"_index":206,"title":{},"body":{"classes/TestElement.html":{}}}],["this.nativeelement.dispatchevent(new",{"_index":203,"title":{},"body":{"classes/TestElement.html":{}}}],["this.nativeelement.getattribute(nam",{"_index":208,"title":{},"body":{"classes/TestElement.html":{}}}],["this.nativeelement.options.length",{"_index":302,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.nativeelement.selectedindex",{"_index":292,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.nativeelement.textcont",{"_index":202,"title":{},"body":{"classes/TestElement.html":{}}}],["this.nativeelement.valu",{"_index":252,"title":{},"body":{"classes/TestInput.html":{},"classes/TestTextArea.html":{}}}],["this.optionlabels.indexof(label",{"_index":296,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.optionvalues.indexof(valu",{"_index":293,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.queri",{"_index":198,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.button(selector",{"_index":214,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.element(selector",{"_index":209,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.elements(selector",{"_index":210,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.input(selector",{"_index":211,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.select(selector",{"_index":212,"title":{},"body":{"classes/TestElement.html":{}}}],["this.querier.textarea(selector",{"_index":213,"title":{},"body":{"classes/TestElement.html":{}}}],["this.select('#c",{"_index":422,"title":{},"body":{"index.html":{}}}],["this.select('#countri",{"_index":419,"title":{},"body":{"index.html":{}}}],["this.selectedindex",{"_index":297,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.selectindex(index",{"_index":295,"title":{},"body":{"classes/TestSelect.html":{}}}],["this.testel",{"_index":132,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.button(selector",{"_index":142,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.element(selector",{"_index":137,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.elements(selector",{"_index":138,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.input(selector",{"_index":139,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.select(selector",{"_index":140,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.testelement.textarea(selector",{"_index":141,"title":{},"body":{"classes/ComponentTester.html":{}}}],["this.tester.detectchang",{"_index":205,"title":{},"body":{"classes/TestElement.html":{},"classes/TestHtmlElement.html":{}}}],["throw",{"_index":61,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["thu",{"_index":87,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["todo",{"_index":270,"title":{},"body":{"classes/TestSelect.html":{}}}],["tort",{"_index":512,"title":{},"body":{"license.html":{}}}],["trigger",{"_index":76,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["true",{"_index":255,"title":{},"body":{"classes/TestInput.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["typic",{"_index":437,"title":{},"body":{"index.html":{}}}],["uncheck",{"_index":231,"title":{},"body":{"classes/TestInput.html":{}}}],["undefin",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["under",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":368,"title":{},"body":{"index.html":{}}}],["unit",{"_index":358,"title":{},"body":{"index.html":{}}}],["us",{"_index":17,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["util",{"_index":363,"title":{},"body":{"index.html":{}}}],["valu",{"_index":84,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"miscellaneous/functions.html":{}}}],["veri",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":81,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{}}}],["warranti",{"_index":494,"title":{},"body":{"license.html":{}}}],["way",{"_index":405,"title":{},"body":{"index.html":{}}}],["whether",{"_index":509,"title":{},"body":{"license.html":{}}}],["without",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["wrap",{"_index":12,"title":{},"body":{"classes/ComponentTester.html":{},"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["wrapper",{"_index":409,"title":{},"body":{"index.html":{}}}],["write",{"_index":151,"title":{},"body":{"classes/TestButton.html":{},"classes/TestElement.html":{},"classes/TestHtmlElement.html":{},"classes/TestInput.html":{},"classes/TestSelect.html":{},"classes/TestTextArea.html":{},"index.html":{}}}],["written",{"_index":375,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":434,"title":{},"body":{"index.html":{}}}],["ye",{"_index":80,"title":{},"body":{"classes/ComponentTester.html":{}}}],["you'v",{"_index":374,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ComponentTester.html":{"url":"classes/ComponentTester.html","title":"class - ComponentTester","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComponentTester\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/component-tester.ts\n        \n\n            \n                Description\n            \n            \n                The main entry point of the API. It wraps an Angular ComponentFixture, and gives access to its\nmost used properties and methods. It also allows getting elements wrapped in TestElement (and its subclasses)\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                fixture\n                            \n                            \n                                    Readonly\n                                testElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                    Static\n                                create\n                            \n                            \n                                detectChanges\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(arg: Type | ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in src/lib/component-tester.ts:33\n                            \n                        \n\n                \n                    \n                            Creates a ComponentFixture for the given component type using the TestBed, and creates a ComponentTester\nwrapping (and delegating) to this fixture. If a fixture is passed, then delegates to this fixture directly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        arg\n                                                  \n                                                        \n                                                                    Type | ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                the type of the component to wrap, or a component fixture to wrap\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fixture\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fixture:     ComponentFixture\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/component-tester.ts:25\n                            \n                        \n\n                \n                    \n                        The component fixture of the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            testElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        testElement:     TestElement\n\n                    \n                \n                    \n                        \n                            Type :     TestElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/component-tester.ts:20\n                            \n                        \n\n                \n                    \n                        The test element of the component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        create(componentType: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:30\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Creates a component fixture of the given type with the TestBed and wraps it into a ComponentTester\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentType\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentTester\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detectChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ndetectChanges(checkNoChanges?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:130\n                            \n                        \n\n\n                \n                    \n                            Triggers a change detection using the wrapped fixture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        checkNoChanges\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/component-tester.ts:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeElement\n                    \n                \n\n                \n                    \n                        getnativeElement()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/component-tester.ts:48\n                                \n                            \n                    \n                        \n                                The native DOM host element of the component\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        componentInstance\n                    \n                \n\n                \n                    \n                        getcomponentInstance()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/component-tester.ts:55\n                                \n                            \n                    \n                        \n                                Gets the instance of the tested component from the wrapped fixture\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        debugElement\n                    \n                \n\n                \n                    \n                        getdebugElement()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/component-tester.ts:62\n                                \n                            \n                    \n                        \n                                Gets the debug element from the wrapped fixture\n\n\n                                \n                                    Returns :     DebugElement\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { DebugElement, Type } from '@angular/core';\nimport { TestTextArea } from './test-textarea';\nimport { TestElement } from './test-element';\nimport { TestInput } from './test-input';\nimport { TestSelect } from './test-select';\nimport { TestButton } from './test-button';\nimport { TestElementQuerier } from './test-element-querier';\n\n/**\n * The main entry point of the API. It wraps an Angular ComponentFixture, and gives access to its\n * most used properties and methods. It also allows getting elements wrapped in TestElement (and its subclasses)\n * @param  the type of the component to test\n */\nexport class ComponentTester {\n\n  /**\n   * The test element of the component\n   */\n  readonly testElement: TestElement;\n\n  /**\n   * The component fixture of the component\n   */\n  readonly fixture: ComponentFixture;\n\n  /**\n   * Creates a component fixture of the given type with the TestBed and wraps it into a ComponentTester\n   */\n  static create(componentType: Type) {\n    const fixture = TestBed.createComponent(componentType);\n    return new ComponentTester(fixture);\n  }\n\n  /**\n   * Creates a ComponentFixture for the given component type using the TestBed, and creates a ComponentTester\n   * wrapping (and delegating) to this fixture. If a fixture is passed, then delegates to this fixture directly.\n   * @param arg the type of the component to wrap, or a component fixture to wrap\n   */\n  constructor(arg: Type | ComponentFixture) {\n    this.fixture = (arg instanceof ComponentFixture) ? arg : TestBed.createComponent(arg);\n    this.testElement = TestElementQuerier.wrap(this.debugElement, this);\n  }\n\n  /**\n   * The native DOM host element of the component\n   */\n  get nativeElement(): HTMLElement {\n    return this.fixture.nativeElement;\n  }\n\n  /**\n   * Gets the instance of the tested component from the wrapped fixture\n   */\n  get componentInstance(): T {\n    return this.fixture.componentInstance;\n  }\n\n  /**\n   * Gets the debug element from the wrapped fixture\n   */\n  get debugElement(): DebugElement {\n    return this.fixture.debugElement;\n  }\n\n  /**\n   * Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\n   * of the returned value is the TestElement subclass matching the type of the found element. So, if the\n   * matched element is an input for example, the method will return a TestInput. You can thus use\n   * `tester.element('#some-input') as TestInput`.\n   * @param selector a CSS selector\n   * @returns the wrapped element, or null if no element matches the selector.\n   */\n  element(selector: string): TestElement | null {\n    return this.testElement.element(selector);\n  }\n\n  /**\n   * Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\n   * of the returned elements is the TestElement subclass matching the type of the found element. So, if the\n   * matched elements are inputs for example, the method will return an array of TestInput. You can thus use\n   * `tester.elements('input') as Array`.\n   * @param selector a CSS selector\n   * @returns the array of matched elements, empty if no element was matched\n   */\n  elements(selector: string): Array> {\n    return this.testElement.elements(selector);\n  }\n\n  /**\n   * Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n   * @param selector a CSS selector\n   * @returns the wrapped input, or null if no element was matched\n   */\n  input(selector: string): TestInput | null  {\n    return this.testElement.input(selector);\n  }\n\n  /**\n   * Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n   * @param selector a CSS selector\n   * @returns the wrapped select, or null if no element was matched\n   */\n  select(selector: string): TestSelect | null  {\n    return this.testElement.select(selector);\n  }\n\n  /**\n   * Gets the first textarea matched by the given selector\n   * @param selector a CSS selector\n   * @returns the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n   * @throws {Error} if the matched element isn't actually a textarea\n   */\n  textarea(selector: string): TestTextArea | null {\n    return this.testElement.textarea(selector);\n  }\n\n  /**\n   * Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n   * @param selector a CSS selector\n   * @returns the wrapped button, or null if no element was matched\n   */\n  button(selector: string): TestButton | null {\n    return this.testElement.button(selector);\n  }\n\n  /**\n   * Triggers a change detection using the wrapped fixture\n   */\n  detectChanges(checkNoChanges?: boolean) {\n    this.fixture.detectChanges(checkNoChanges);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestButton.html":{"url":"classes/TestButton.html","title":"class - TestButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-button.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped button element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestHtmlElement\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-button.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-button.ts:16\n                                \n                            \n                    \n                        \n                                the disabled flag of the button\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestHtmlElement } from './test-html-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped button element, providing additional methods and attributes helping with writing tests\n */\nexport class TestButton extends TestHtmlElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * the disabled flag of the button\n   */\n  get disabled() {\n    return this.nativeElement.disabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestElement.html":{"url":"classes/TestElement.html","title":"class - TestElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-element.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM element, providing additional methods and attributes helping with writing tests\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-element.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/test-element.ts:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-element.ts:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeElement\n                    \n                \n\n                \n                    \n                        getnativeElement()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-element.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        textContent\n                    \n                \n\n                \n                    \n                        gettextContent()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-element.ts:31\n                                \n                            \n                    \n                        \n                                the text content of this element\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        classes\n                    \n                \n\n                \n                    \n                        getclasses()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-element.ts:54\n                                \n                            \n                    \n                        \n                                Gets the CSS classes of the wrapped element, as an array\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestButton } from './test-button';\nimport { TestSelect } from './test-select';\nimport { TestTextArea } from './test-textarea';\nimport { TestInput } from './test-input';\nimport { TestElementQuerier } from './test-element-querier';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM element, providing additional methods and attributes helping with writing tests\n */\nexport class TestElement {\n\n  private querier: TestElementQuerier;\n\n  constructor(protected tester: ComponentTester,\n              /**\n               * the wrapped debug element\n               */\n              public readonly debugElement: DebugElement) {\n    this.querier = new TestElementQuerier(tester, debugElement);\n  }\n\n  get nativeElement(): E {\n    return this.debugElement.nativeElement;\n  }\n\n  /**\n   * the text content of this element\n   */\n  get textContent() {\n    return this.nativeElement.textContent;\n  }\n\n  /**\n   * dispatches an event of the given type from the wrapped element, then triggers a change detection\n   */\n  dispatchEventOfType(type: string) {\n    this.nativeElement.dispatchEvent(new Event(type));\n    this.tester.detectChanges();\n  }\n\n  /**\n   * dispatches the given event from the wrapped element, then triggers a change detection\n   */\n  dispatchEvent(event: Event) {\n    this.nativeElement.dispatchEvent(event);\n    this.tester.detectChanges();\n  }\n\n  /**\n   * Gets the CSS classes of the wrapped element, as an array\n   */\n  get classes(): Array {\n    return Array.prototype.slice.call(this.nativeElement.classList);\n  }\n\n  /**\n   * Gets the attribute of the wrapped element with the given name\n   * @param name the name of the attribute to get\n   */\n  attr(name: string) {\n    return this.nativeElement.getAttribute(name);\n  }\n\n  /**\n   * Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\n   * of the returned value is the TestElement subclass matching the type of the found element. So, if the\n   * matched element is an input for example, the method will return a TestInput. You can thus use\n   * `tester.element('#some-input') as TestInput`.\n   * @param selector a CSS selector\n   * @returns the wrapped element, or null if no element matches the selector.\n   */\n  element(selector: string): TestElement | null {\n    return this.querier.element(selector);\n  }\n\n  /**\n   * Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\n   * of the returned elements is the TestElement subclass matching the type of the found element. So, if the\n   * matched elements are inputs for example, the method will return an array of TestInput. You can thus use\n   * `tester.elements('input') as Array`.\n   * @param selector a CSS selector\n   * @returns the array of matched elements, empty if no element was matched\n   */\n  elements(selector: string): Array> {\n    return this.querier.elements(selector);\n  }\n\n  /**\n   * Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n   * @param selector a CSS selector\n   * @returns the wrapped input, or null if no element was matched\n   */\n  input(selector: string): TestInput | null {\n    return this.querier.input(selector);\n  }\n\n  /**\n   * Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n   * @param selector a CSS selector\n   * @returns the wrapped select, or null if no element was matched\n   */\n  select(selector: string): TestSelect | null {\n    return this.querier.select(selector);\n  }\n\n  /**\n   * Gets the first textarea matched by the given selector\n   * @param selector a CSS selector\n   * @returns the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n   * @throws {Error} if the matched element isn't actually a textarea\n   */\n  textarea(selector: string): TestTextArea | null {\n    return this.querier.textarea(selector);\n  }\n\n  /**\n   * Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n   * @param selector a CSS selector\n   * @returns the wrapped button, or null if no element was matched\n   */\n  button(selector: string): TestButton | null {\n    return this.querier.button(selector);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestHtmlElement.html":{"url":"classes/TestHtmlElement.html","title":"class - TestHtmlElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestHtmlElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-html-element.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM HTML element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-html-element.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-html-element.ts:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestElement:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestElement } from './test-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM HTML element, providing additional methods and attributes helping with writing tests\n */\nexport class TestHtmlElement extends TestElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * Clicks on the wrapped element, then triggers a change detection\n   */\n  click() {\n    this.nativeElement.click();\n    this.tester.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestInput.html":{"url":"classes/TestInput.html","title":"class - TestInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-input.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM HTML input element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestHtmlElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                fillWith\n                            \n                            \n                                uncheck\n                            \n                            \n                                click\n                            \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-input.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            check\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-input.ts:39\n                            \n                        \n\n\n                \n                    \n                            Checks the wrapped input, then dispatches an event of type change and triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillWith(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-input.ts:17\n                            \n                        \n\n\n                \n                    \n                            Sets the value of the wrapped input, then dispatches an event of type input and triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the new value of the input\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uncheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nuncheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-input.ts:47\n                            \n                        \n\n\n                \n                    \n                            Unchecks the wrapped input, then dispatches an event of type change and triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-input.ts:25\n                                \n                            \n                    \n                        \n                                the value of the wrapped input\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n\n                \n                    \n                        getchecked()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-input.ts:32\n                                \n                            \n                    \n                        \n                                the checked property of the wrapped input\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestHtmlElement } from './test-html-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM HTML input element, providing additional methods and attributes helping with writing tests\n */\nexport class TestInput extends TestHtmlElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * Sets the value of the wrapped input, then dispatches an event of type input and triggers a change detection\n   * @param value the new value of the input\n   */\n  fillWith(value: string) {\n    this.nativeElement.value = value;\n    this.dispatchEventOfType('input');\n  }\n\n  /**\n   * the value of the wrapped input\n   */\n  get value() {\n    return this.nativeElement.value;\n  }\n\n  /**\n   * the checked property of the wrapped input\n   */\n  get checked() {\n    return this.nativeElement.checked;\n  }\n\n  /**\n   * Checks the wrapped input, then dispatches an event of type change and triggers a change detection\n   */\n  check() {\n    this.nativeElement.checked = true;\n    this.dispatchEventOfType('change');\n  }\n\n  /**\n   * Unchecks the wrapped input, then dispatches an event of type change and triggers a change detection\n   */\n  uncheck() {\n    this.nativeElement.checked = false;\n    this.dispatchEventOfType('change');\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestSelect.html":{"url":"classes/TestSelect.html","title":"class - TestSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-select.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM HTML select element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestHtmlElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectIndex\n                            \n                            \n                                selectLabel\n                            \n                            \n                                selectValue\n                            \n                            \n                                click\n                            \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-select.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-select.ts:16\n                            \n                        \n\n\n                \n                    \n                            Selects the option at the given index, then dispatches an event of type change and triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectLabel(label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-select.ts:38\n                            \n                        \n\n\n                \n                    \n                            Selects the first option with the given label (or text), then dispatches an event of type change and triggers a change detection.\nIf there is no option with the given label, then does nothing\nTODO should it throw instead?\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-select.ts:26\n                            \n                        \n\n\n                \n                    \n                            Selects the first option with the given value, then dispatches an event of type change and triggers a change detection.\nIf there is no option with the given value, then does nothing\nTODO should it throw instead?\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIndex\n                    \n                \n\n                \n                    \n                        getselectedIndex()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:48\n                                \n                            \n                    \n                        \n                                the selected index of the wrapped select\n\n\n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedValue\n                    \n                \n\n                \n                    \n                        getselectedValue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:55\n                                \n                            \n                    \n                        \n                                the value of the selected option of the wrapped select, or null if there is no selected option\n\n\n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedLabel\n                    \n                \n\n                \n                    \n                        getselectedLabel()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:65\n                                \n                            \n                    \n                        \n                                the label (or text if no label) of the selected option of the wrapped select, or null if there is no selected option\n\n\n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        optionValues\n                    \n                \n\n                \n                    \n                        getoptionValues()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:75\n                                \n                            \n                    \n                        \n                                the values of the options, as an array\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        optionLabels\n                    \n                \n\n                \n                    \n                        getoptionLabels()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:82\n                                \n                            \n                    \n                        \n                                the labels (or texts if no label) of the options, as an array\n\n\n                                \n                                    Returns :     Array\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-select.ts:89\n                                \n                            \n                    \n                        \n                                the number of options in the select\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestHtmlElement } from './test-html-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM HTML select element, providing additional methods and attributes helping with writing tests\n */\nexport class TestSelect extends TestHtmlElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * Selects the option at the given index, then dispatches an event of type change and triggers a change detection\n   */\n  selectIndex(index: number) {\n    this.nativeElement.selectedIndex = index;\n    this.dispatchEventOfType('change');\n  }\n\n  /**\n   * Selects the first option with the given value, then dispatches an event of type change and triggers a change detection.\n   * If there is no option with the given value, then does nothing\n   * TODO should it throw instead?\n   */\n  selectValue(value: string) {\n    const index = this.optionValues.indexOf(value);\n    if (index >= 0) {\n      this.selectIndex(index);\n    }\n  }\n\n  /**\n   * Selects the first option with the given label (or text), then dispatches an event of type change and triggers a change detection.\n   * If there is no option with the given label, then does nothing\n   * TODO should it throw instead?\n   */\n  selectLabel(label: string) {\n    const index = this.optionLabels.indexOf(label);\n    if (index >= 0) {\n      this.selectIndex(index);\n    }\n  }\n\n  /**\n   * the selected index of the wrapped select\n   */\n  get selectedIndex(): number {\n    return this.nativeElement.selectedIndex;\n  }\n\n  /**\n   * the value of the selected option of the wrapped select, or null if there is no selected option\n   */\n  get selectedValue(): string | null {\n    if (this.selectedIndex  {\n    return (Array.prototype.slice.call(this.nativeElement.options) as Array).map(option => option.value);\n  }\n\n  /**\n   * the labels (or texts if no label) of the options, as an array\n   */\n  get optionLabels(): Array {\n    return (Array.prototype.slice.call(this.nativeElement.options) as Array).map(option => option.label);\n  }\n\n  /**\n   * the number of options in the select\n   */\n  get size() {\n    return this.nativeElement.options.length;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestTextArea.html":{"url":"classes/TestTextArea.html","title":"class - TestTextArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestTextArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/test-textarea.ts\n        \n\n            \n                Description\n            \n            \n                A wrapped DOM HTML textarea element, providing additional methods and attributes helping with writing tests\n\n            \n\n            \n                Extends\n            \n            \n                    TestHtmlElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                debugElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fillWith\n                            \n                            \n                                click\n                            \n                            \n                                attr\n                            \n                            \n                                button\n                            \n                            \n                                dispatchEvent\n                            \n                            \n                                dispatchEventOfType\n                            \n                            \n                                element\n                            \n                            \n                                elements\n                            \n                            \n                                input\n                            \n                            \n                                select\n                            \n                            \n                                textarea\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tester: ComponentTester, debugElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in src/lib/test-textarea.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tester\n                                                  \n                                                        \n                                                                    ComponentTester\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        debugElement\n                                                  \n                                                        \n                                                                    DebugElement\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debugElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debugElement:     DebugElement\n\n                    \n                \n                    \n                        \n                            Type :     DebugElement\n\n                        \n                    \n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:20\n                            \n                        \n\n                \n                    \n                        the wrapped debug element\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fillWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nfillWith(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/test-textarea.ts:17\n                            \n                        \n\n\n                \n                    \n                            Sets the value of the wrapped textarea, then dispatches an event of type input and triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the new value of the textarea\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:16\n                            \n                        \n\n\n                \n                    \n                            Clicks on the wrapped element, then triggers a change detection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr\n                            \n                            \n                        \n                    \n                \n                \n                    \nattr(name: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:62\n                            \n                        \n\n\n                \n                    \n                            Gets the attribute of the wrapped element with the given name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the attribute to get\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \nbutton(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:123\n                            \n                        \n\n\n                \n                    \n                            Gets the first button matched by the given selector. Throws an Error if the matched element isn't actually a button.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestButton | null\n\n                            \n                                \n                                    the wrapped button, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEvent(event: Event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:46\n                            \n                        \n\n\n                \n                    \n                            dispatches the given event from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatchEventOfType\n                            \n                            \n                        \n                    \n                \n                \n                    \ndispatchEventOfType(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:38\n                            \n                        \n\n\n                \n                    \n                            dispatches an event of the given type from the wrapped element, then triggers a change detection\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \nelement(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:74\n                            \n                        \n\n\n                \n                    \n                            Gets the first element matching the given CSS selector and wraps it into a TestElement. The actual type\nof the returned value is the TestElement subclass matching the type of the found element. So, if the\nmatched element is an input for example, the method will return a TestInput. You can thus use\ntester.element('#some-input') as TestInput.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestElement | null\n\n                            \n                                \n                                    the wrapped element, or null if no element matches the selector.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                            \n                        \n                    \n                \n                \n                    \nelements(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:86\n                            \n                        \n\n\n                \n                    \n                            Gets all the elements matching the given CSS selector and wraps them into a TestElement. The actual type\nof the returned elements is the TestElement subclass matching the type of the found element. So, if the\nmatched elements are inputs for example, the method will return an array of TestInput. You can thus use\ntester.elements('input') as Array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array>\n\n                            \n                                \n                                    the array of matched elements, empty if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \ninput(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:95\n                            \n                        \n\n\n                \n                    \n                            Gets the first input matched by the given selector. Throws an Error if the matched element isn't actually an input.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestInput | null\n\n                            \n                                \n                                    the wrapped input, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:104\n                            \n                        \n\n\n                \n                    \n                            Gets the first select matched by the given selector. Throws an Error if the matched element isn't actually a select.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestSelect | null\n\n                            \n                                \n                                    the wrapped select, or null if no element was matched\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textarea\n                            \n                            \n                        \n                    \n                \n                \n                    \ntextarea(selector: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TestHtmlElement\n\n                                \n                            \n                        \n                            \n                                    Defined in TestHtmlElement:114\n                            \n                        \n\n\n                \n                    \n                            Gets the first textarea matched by the given selector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                a CSS selector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TestTextArea | null\n\n                            \n                                \n                                    the wrapped textarea, or null if no element was matched. Throws an Error if the matched element isn't actually a textarea.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/test-textarea.ts:25\n                                \n                            \n                    \n                        \n                                the value of the wrapped textarea\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ComponentTester } from './component-tester';\nimport { TestHtmlElement } from './test-html-element';\nimport { DebugElement } from '@angular/core';\n\n/**\n * A wrapped DOM HTML textarea element, providing additional methods and attributes helping with writing tests\n */\nexport class TestTextArea extends TestHtmlElement {\n  constructor(tester: ComponentTester, debugElement: DebugElement) {\n    super(tester, debugElement);\n  }\n\n  /**\n   * Sets the value of the wrapped textarea, then dispatches an event of type input and triggers a change detection\n   * @param value the new value of the textarea\n   */\n  fillWith(value: string) {\n    this.nativeElement.value = value;\n    this.dispatchEventOfType('input');\n  }\n\n  /**\n   * the value of the wrapped textarea\n   */\n  get value() {\n    return this.nativeElement.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\n\n0.1.0 (2018-05-25)\nVery first release :champagne:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : ^6.0.0\n        \n            @angular/router : ^6.0.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fakeRoute   (src/.../route.ts)\n                        \n                        \n                            fakeSnapshot   (src/.../route.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/route.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fakeRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \nfakeRoute(options: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a fake partial ActivatedRoute for tests.\nIf you pass params, then the created route's paramMap will contain the same values.\nThe same goes for queryParams and queryParamMap.\nIf you pass a parent route and a snapshot, and the passed snapshot doesn't have a parent, then the snapshot's\nparent will be set to the parent route snapshot. This allows the code under test to use\nroute.parent.snapshot or route.snapshot.parent.\nIf you pass a snapshot with a parent, but don't pass a parent or pass a parent without snapshot, then the route's\nparent snapshot will be set to the given snapshot's parent. This allows the code under test to use\nroute.parent.snapshot or route.snapshot.parent.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fakeSnapshot\n                            \n                            \n                        \n                    \n                \n                \n                    \nfakeSnapshot(options: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a fake partial ActivatedRouteSnapshot for tests.\nIf you pass params, then the created snapshot's paramMap will contain the same values.\nThe same goes for queryParams and queryParamMap.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nngx-speculoos\nngx-speculoos helps you write simpler, cleaner unit tests for your Angular components, based on the\npage object pattern. It also provides utilities to make writing Angular unit tests.\nThe library simply wraps the standard Angular ComponentFixture, and you should thus be \nable to understand and start using ngx-speculoos in just a few minutes if you already know\nhow to write Angular unit tests.\nWhy should you care?\nIf you've ever written tests like the following:\nit('should display French cities when selecting the country France', () => {\n  const countrySelect = fixture.nativeElement.querySelector('#country'); // countrySelect is of type any\n  countrySelect.selectedIndex = 12; // what is at index 12?\n  countrySelect.dispatchEvent(new Event('change')); // why do I need to do that?\n  fixture.detectChanges();\n\n  const city = fixture.nativeElement.querySelector('#city'); // city is of type any\n  expect(city).toBeTruthy();\n  expect(city.options.length).toBe(3);\n  expect(city.options[0].value).toBe('');\n  expect(city.options[0].label).toBe('');\n  expect(city.options[1].value).toBe('PARIS');\n  expect(city.options[1].label).toBe('Paris');\n  expect(city.options[2].value).toBe('LYON');\n  expect(city.options[2].label).toBe('Lyon');\n});\n\nit('should hide cities when selecting the empty country option', () => {\n  const countrySelect = fixture.nativeElement.querySelector('#country'); // I did that previously. What about DRY?\n  countrySelect.selectedIndex = 0;\n  countrySelect.dispatchEvent(new Event('change')); // why do I need to do that?\n  fixture.detectChanges(); // why do I need to do that?\n\n  expect(fixture.nativeElement.querySelector('#city')).toBeFalsy(); // I did that previously. What about DRY?\n});ngx-speculoos allows writing the above tests in a simpler, cleaner way. \nBy using the page object pattern (which is optional, but recommended), you avoid repetitions. \nBy using wrappers around elements, dispatching events and triggering change detection is automatic.\nBy using wrappers around elements, you get useful additional methods to make tests easier to write and read.\nIn any case you need them, you always have access to the fixture, the native elements, the debug elements, etc.\nclass MyComponentTester extends ComponentTester {\n  constructor() {\n    super(MyComponent);\n  }\n\n  get country() {\n    return this.select('#country'); // returns a TestSelect object, not any. Similar methods exist for inputs, buttons, etc.\n  }\n\n  get city() {\n    return this.select('#city'); // returns a TestSelect object, not any\n  }\n}\n\n[...]\n\nit('should display French cities when selecting the country France', () => {\n  tester.country.selectLabel('France'); // no dispatchEvent, no detectChanges needed\n\n  expect(tester.city.optionValues).toEqual(['', 'PARIS', 'LYON']);\n  expect(tester.city.optionLabels).toEqual(['', 'Paris', 'Lyon']);\n});\n\nit('should hide cities when selecting empty country option', () => {\n  tester.country.selectIndex(0); // no repetition of the selector, no dispatchEvent, no detectChanges needed\n\n  expect(tester.city).toBeFalsy(); // no repetition of the selector\n});Installation\nUsing npm: npm install --save-dev ngx-speculoos\nUsing yarn: yarn add --dev ngx-speculoos\nGetting started\n\nimport ComponentTester, and other needed classes from ngx-speculoos\nCreate a MyComponentTester class (in your my-component.spec.ts file, typically) extending \nComponentTester, as shown above.\nExpose getters (or methods, if you prefer) returning the elements used in your tests, using\none of the ComponentTester methods (element, elements, input, select, textarea, button).\nSee the API documentation for details\nWrite your tests, as shown above, benefitting from the additional methods on the TestXxx classes.\nIf needed, you can always get the fixture, componentInstance, debugElement, nativeElement, etc.\nfrom the ComponentTester, and the nativeElement from each TestXxx wrapper.\n\nIssues, questions\nPlease, provide feedback by filing issues, or by submitting pull requests, to the Github Project.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Ninja Squad\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        7 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
